{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "09bb70ba",
   "metadata": {
    "id": "DtNBZFHO3M7n",
    "papermill": {
     "duration": 0.025792,
     "end_time": "2024-05-12T19:15:24.075831",
     "exception": false,
     "start_time": "2024-05-12T19:15:24.050039",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Automatidata project - Linear regression model**\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9706b02",
   "metadata": {
    "id": "kaOj1equPMAb",
    "papermill": {
     "duration": 0.023305,
     "end_time": "2024-05-12T19:15:24.122966",
     "exception": false,
     "start_time": "2024-05-12T19:15:24.099661",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The data consulting firm Automatidata has recently hired you as the newest member of their data analytics team. Their newest client, the NYC Taxi and Limousine Commission (New York City TLC), wants the Automatidata team to build a multiple linear regression model to predict taxi fares using existing data that was collected over the course of a year. The team is getting closer to completing the project, having completed an initial plan of action, initial Python coding work, EDA, and A/B testing.\n",
    "\n",
    "The Automatidata team has reviewed the results of the A/B testing. Now it’s time to work on predicting the taxi fare amounts. You’ve impressed your Automatidata colleagues with your hard work and attention to detail. The data team believes that you are ready to build the regression model and update the client New York City TLC about your progress.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "953b6c1e",
   "metadata": {
    "id": "rgSbVJvomcVa",
    "papermill": {
     "duration": 0.024558,
     "end_time": "2024-05-12T19:15:24.171020",
     "exception": false,
     "start_time": "2024-05-12T19:15:24.146462",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Build a multiple linear regression model\n",
    "\n",
    "**The purpose** of this project is to demostrate knowledge of EDA and a multiple linear regression model\n",
    "\n",
    "**The goal** is to build a multiple linear regression model and evaluate the model\n",
    "<br/>\n",
    "*This activity has three parts:*\n",
    "\n",
    "**Part 1:** EDA & Checking Model Assumptions\n",
    "* What are some purposes of EDA before constructing a multiple linear regression model?\n",
    "\n",
    "**Part 2:** Model Building and evaluation\n",
    "* What resources do you find yourself using as you complete this stage?\n",
    "\n",
    "**Part 3:** Interpreting Model Results\n",
    "\n",
    "* What key insights emerged from your model(s)?\n",
    "\n",
    "* What business recommendations do you propose based on the models built?\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "add404aa",
   "metadata": {
    "id": "7KFOyc3JPSiN",
    "papermill": {
     "duration": 0.023083,
     "end_time": "2024-05-12T19:15:24.217668",
     "exception": false,
     "start_time": "2024-05-12T19:15:24.194585",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Build a multiple linear regression model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bab8cc99",
   "metadata": {
    "id": "F5O5cx_qQJmX",
    "papermill": {
     "duration": 0.024328,
     "end_time": "2024-05-12T19:15:24.265444",
     "exception": false,
     "start_time": "2024-05-12T19:15:24.241116",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## PACE: **Plan**\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5241b627",
   "metadata": {
    "id": "D8qYlvkLQsf2",
    "papermill": {
     "duration": 0.024171,
     "end_time": "2024-05-12T19:15:24.312882",
     "exception": false,
     "start_time": "2024-05-12T19:15:24.288711",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 1. Imports and loading\n",
    "Import the packages that you've learned are needed for building linear regression models."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7ea45528",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:24.361424Z",
     "iopub.status.busy": "2024-05-12T19:15:24.361015Z",
     "iopub.status.idle": "2024-05-12T19:15:26.856478Z",
     "shell.execute_reply": "2024-05-12T19:15:26.855339Z"
    },
    "id": "ccfeg6X6eOVZ",
    "papermill": {
     "duration": 2.522439,
     "end_time": "2024-05-12T19:15:26.858859",
     "exception": false,
     "start_time": "2024-05-12T19:15:24.336420",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/yellow-taxi-trip-data-2017/C2_2017_Yellow_Taxi_Trip_Data.csv\n"
     ]
    }
   ],
   "source": [
    "# Imports\n",
    "# Packages for numerics + dataframes\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# Packages for visualization\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Packages for date conversions for calculating trip durations\n",
    "from datetime import datetime\n",
    "from datetime import date\n",
    "from datetime import timedelta\n",
    "\n",
    "# Packages for OLS, MLR, confusion matrix\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.model_selection import train_test_split\n",
    "import sklearn.metrics as metrics # For confusion matrix\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_absolute_error,r2_score,mean_squared_error\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31d17c5f",
   "metadata": {
    "id": "dhSYPrzQ2lpH",
    "papermill": {
     "duration": 0.023569,
     "end_time": "2024-05-12T19:15:26.906694",
     "exception": false,
     "start_time": "2024-05-12T19:15:26.883125",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Note:** `Pandas` is used to load the NYC TLC dataset.  As shown in this cell, the dataset has been automatically loaded in for you. You do not need to download the .csv file, or provide more code, in order to access the dataset and proceed with this lab. Please continue with this activity by completing the following instructions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "37cb73f7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:26.957260Z",
     "iopub.status.busy": "2024-05-12T19:15:26.955934Z",
     "iopub.status.idle": "2024-05-12T19:15:27.076301Z",
     "shell.execute_reply": "2024-05-12T19:15:27.075029Z"
    },
    "id": "TyR3sBUYJBO8",
    "outputId": "5ce192d4-144e-44c9-9360-2bb6000dc743",
    "papermill": {
     "duration": 0.148253,
     "end_time": "2024-05-12T19:15:27.079000",
     "exception": false,
     "start_time": "2024-05-12T19:15:26.930747",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df0=pd.read_csv(\"/kaggle/input/yellow-taxi-trip-data-2017/C2_2017_Yellow_Taxi_Trip_Data.csv\") # index_col parameter specified to avoid \"Unnamed: 0\" column when reading in data from csv"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "695e5bdf",
   "metadata": {
    "id": "OnrvCSfHUWPv",
    "papermill": {
     "duration": 0.025188,
     "end_time": "2024-05-12T19:15:27.183701",
     "exception": false,
     "start_time": "2024-05-12T19:15:27.158513",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## PACE: **Analyze**\n",
    "\n",
    "In this stage, consider the following question where applicable to complete your code response:\n",
    "\n",
    "* What are some purposes of EDA before constructing a multiple linear regression model?\n",
    "\n",
    "1.   Outliers and extreme data values can significantly impact linear regression equations. After visualizing data, make a plan for addressing outliers by dropping rows, substituting extreme data with average data, and/or removing data values greater than 3 standard deviations.\n",
    "\n",
    "2.   EDA activities also include identifying missing data to help the analyst make decisions on their exclusion or inclusion by substituting values with data set means, medians, and other similar methods.\n",
    "\n",
    "3.   It's important to check for things like multicollinearity between predictor variables, as well to understand their distributions, as this will help you decide what statistical inferences can be made from the model and which ones cannot.\n",
    "\n",
    "4.  Additionally, it can be useful to engineer new features by multiplying variables together or taking the difference from one variable to another. For example, in this dataset you can create a `duration` variable by subtracting `tpep_dropoff` from `tpep_pickup time`."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "60c1b87a",
   "metadata": {
    "id": "rIcDG2e66wt9",
    "papermill": {
     "duration": 0.023146,
     "end_time": "2024-05-12T19:15:27.230594",
     "exception": false,
     "start_time": "2024-05-12T19:15:27.207448",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 2a. Explore data with EDA\n",
    "\n",
    "Analyze and discover data, looking for correlations, missing data, outliers, and duplicates."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d5d4d77",
   "metadata": {
    "id": "CLpoUCz1277k",
    "papermill": {
     "duration": 0.023039,
     "end_time": "2024-05-12T19:15:27.277363",
     "exception": false,
     "start_time": "2024-05-12T19:15:27.254324",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Start with `.shape` and `.info()`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8791bd56",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:27.326684Z",
     "iopub.status.busy": "2024-05-12T19:15:27.326314Z",
     "iopub.status.idle": "2024-05-12T19:15:27.361012Z",
     "shell.execute_reply": "2024-05-12T19:15:27.359976Z"
    },
    "id": "T4Ag-sZhWg6K",
    "outputId": "15c6d684-14b1-4201-baa1-0770fa9ce18e",
    "papermill": {
     "duration": 0.062652,
     "end_time": "2024-05-12T19:15:27.363445",
     "exception": false,
     "start_time": "2024-05-12T19:15:27.300793",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(22699, 18)\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 22699 entries, 0 to 22698\n",
      "Data columns (total 18 columns):\n",
      " #   Column                 Non-Null Count  Dtype  \n",
      "---  ------                 --------------  -----  \n",
      " 0   Unnamed: 0             22699 non-null  int64  \n",
      " 1   VendorID               22699 non-null  int64  \n",
      " 2   tpep_pickup_datetime   22699 non-null  object \n",
      " 3   tpep_dropoff_datetime  22699 non-null  object \n",
      " 4   passenger_count        22699 non-null  int64  \n",
      " 5   trip_distance          22699 non-null  float64\n",
      " 6   RatecodeID             22699 non-null  int64  \n",
      " 7   store_and_fwd_flag     22699 non-null  object \n",
      " 8   PULocationID           22699 non-null  int64  \n",
      " 9   DOLocationID           22699 non-null  int64  \n",
      " 10  payment_type           22699 non-null  int64  \n",
      " 11  fare_amount            22699 non-null  float64\n",
      " 12  extra                  22699 non-null  float64\n",
      " 13  mta_tax                22699 non-null  float64\n",
      " 14  tip_amount             22699 non-null  float64\n",
      " 15  tolls_amount           22699 non-null  float64\n",
      " 16  improvement_surcharge  22699 non-null  float64\n",
      " 17  total_amount           22699 non-null  float64\n",
      "dtypes: float64(8), int64(7), object(3)\n",
      "memory usage: 3.1+ MB\n"
     ]
    }
   ],
   "source": [
    "# Start with `.shape` and `.info()`\n",
    "\n",
    "# Keep `df0` as the original dataframe and create a copy (df) where changes will go\n",
    "# Can revert `df` to `df0` if needed down the line\n",
    "df = df0.copy()\n",
    "\n",
    "# Display the dataset's shape\n",
    "print(df.shape)\n",
    "\n",
    "# Display basic info about the dataset\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "530245ea",
   "metadata": {
    "papermill": {
     "duration": 0.02417,
     "end_time": "2024-05-12T19:15:27.411524",
     "exception": false,
     "start_time": "2024-05-12T19:15:27.387354",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Check for missing data and duplicates using `.isna()` and `.drop_duplicates()`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0d8a27f2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:27.461513Z",
     "iopub.status.busy": "2024-05-12T19:15:27.460564Z",
     "iopub.status.idle": "2024-05-12T19:15:27.501923Z",
     "shell.execute_reply": "2024-05-12T19:15:27.500469Z"
    },
    "id": "3QZZIxxi3OV3",
    "outputId": "255e6481-0818-41a3-dc85-0fe7a9e0c5c1",
    "papermill": {
     "duration": 0.068927,
     "end_time": "2024-05-12T19:15:27.504281",
     "exception": false,
     "start_time": "2024-05-12T19:15:27.435354",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shape of dataframe: (22699, 18)\n",
      "Shape of dataframe with duplicates dropped: (22699, 18)\n",
      "Total count of missing values: 0\n",
      "Missing values per column:\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Unnamed: 0               0\n",
       "VendorID                 0\n",
       "tpep_pickup_datetime     0\n",
       "tpep_dropoff_datetime    0\n",
       "passenger_count          0\n",
       "trip_distance            0\n",
       "RatecodeID               0\n",
       "store_and_fwd_flag       0\n",
       "PULocationID             0\n",
       "DOLocationID             0\n",
       "payment_type             0\n",
       "fare_amount              0\n",
       "extra                    0\n",
       "mta_tax                  0\n",
       "tip_amount               0\n",
       "tolls_amount             0\n",
       "improvement_surcharge    0\n",
       "total_amount             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check for missing data and duplicates using .isna() and .drop_duplicates()\n",
    "### YOUR CODE HERE ###\n",
    "\n",
    "# Check for duplicates\n",
    "print('Shape of dataframe:', df.shape)\n",
    "print('Shape of dataframe with duplicates dropped:', df.drop_duplicates().shape)\n",
    "\n",
    "# Check for missing values in dataframe\n",
    "print('Total count of missing values:', df.isna().sum().sum())\n",
    "\n",
    "# Display missing values per column in dataframe\n",
    "print('Missing values per column:')\n",
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f28686cb",
   "metadata": {
    "papermill": {
     "duration": 0.02386,
     "end_time": "2024-05-12T19:15:27.552413",
     "exception": false,
     "start_time": "2024-05-12T19:15:27.528553",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "There are no duplicates or missing values in the data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "55f0382e",
   "metadata": {
    "id": "WXWAlPTY9iLK",
    "papermill": {
     "duration": 0.024368,
     "end_time": "2024-05-12T19:15:27.601201",
     "exception": false,
     "start_time": "2024-05-12T19:15:27.576833",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Use `.describe()`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0fe1a440",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:27.652382Z",
     "iopub.status.busy": "2024-05-12T19:15:27.651985Z",
     "iopub.status.idle": "2024-05-12T19:15:27.716104Z",
     "shell.execute_reply": "2024-05-12T19:15:27.715105Z"
    },
    "id": "2O3b9H9B9nwk",
    "outputId": "3fe65b1a-c169-4038-b283-7ac46ff5303a",
    "papermill": {
     "duration": 0.093008,
     "end_time": "2024-05-12T19:15:27.718347",
     "exception": false,
     "start_time": "2024-05-12T19:15:27.625339",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>VendorID</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>DOLocationID</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>extra</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>total_amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2.269900e+04</td>\n",
       "      <td>22699.000000</td>\n",
       "      <td>22699.000000</td>\n",
       "      <td>22699.000000</td>\n",
       "      <td>22699.000000</td>\n",
       "      <td>22699.000000</td>\n",
       "      <td>22699.000000</td>\n",
       "      <td>22699.000000</td>\n",
       "      <td>22699.000000</td>\n",
       "      <td>22699.000000</td>\n",
       "      <td>22699.000000</td>\n",
       "      <td>22699.000000</td>\n",
       "      <td>22699.000000</td>\n",
       "      <td>22699.000000</td>\n",
       "      <td>22699.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5.675849e+07</td>\n",
       "      <td>1.556236</td>\n",
       "      <td>1.642319</td>\n",
       "      <td>2.913313</td>\n",
       "      <td>1.043394</td>\n",
       "      <td>162.412353</td>\n",
       "      <td>161.527997</td>\n",
       "      <td>1.336887</td>\n",
       "      <td>13.026629</td>\n",
       "      <td>0.333275</td>\n",
       "      <td>0.497445</td>\n",
       "      <td>1.835781</td>\n",
       "      <td>0.312542</td>\n",
       "      <td>0.299551</td>\n",
       "      <td>16.310502</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3.274493e+07</td>\n",
       "      <td>0.496838</td>\n",
       "      <td>1.285231</td>\n",
       "      <td>3.653171</td>\n",
       "      <td>0.708391</td>\n",
       "      <td>66.633373</td>\n",
       "      <td>70.139691</td>\n",
       "      <td>0.496211</td>\n",
       "      <td>13.243791</td>\n",
       "      <td>0.463097</td>\n",
       "      <td>0.039465</td>\n",
       "      <td>2.800626</td>\n",
       "      <td>1.399212</td>\n",
       "      <td>0.015673</td>\n",
       "      <td>16.097295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.212700e+04</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-120.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-0.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.300000</td>\n",
       "      <td>-120.300000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.852056e+07</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.990000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>114.000000</td>\n",
       "      <td>112.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.300000</td>\n",
       "      <td>8.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5.673150e+07</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.610000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>162.000000</td>\n",
       "      <td>162.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>9.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>1.350000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.300000</td>\n",
       "      <td>11.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>8.537452e+07</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.060000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>233.000000</td>\n",
       "      <td>233.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>14.500000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>2.450000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.300000</td>\n",
       "      <td>17.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.134863e+08</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>33.960000</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>265.000000</td>\n",
       "      <td>265.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>999.990000</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>19.100000</td>\n",
       "      <td>0.300000</td>\n",
       "      <td>1200.290000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Unnamed: 0      VendorID  passenger_count  trip_distance  \\\n",
       "count  2.269900e+04  22699.000000     22699.000000   22699.000000   \n",
       "mean   5.675849e+07      1.556236         1.642319       2.913313   \n",
       "std    3.274493e+07      0.496838         1.285231       3.653171   \n",
       "min    1.212700e+04      1.000000         0.000000       0.000000   \n",
       "25%    2.852056e+07      1.000000         1.000000       0.990000   \n",
       "50%    5.673150e+07      2.000000         1.000000       1.610000   \n",
       "75%    8.537452e+07      2.000000         2.000000       3.060000   \n",
       "max    1.134863e+08      2.000000         6.000000      33.960000   \n",
       "\n",
       "         RatecodeID  PULocationID  DOLocationID  payment_type   fare_amount  \\\n",
       "count  22699.000000  22699.000000  22699.000000  22699.000000  22699.000000   \n",
       "mean       1.043394    162.412353    161.527997      1.336887     13.026629   \n",
       "std        0.708391     66.633373     70.139691      0.496211     13.243791   \n",
       "min        1.000000      1.000000      1.000000      1.000000   -120.000000   \n",
       "25%        1.000000    114.000000    112.000000      1.000000      6.500000   \n",
       "50%        1.000000    162.000000    162.000000      1.000000      9.500000   \n",
       "75%        1.000000    233.000000    233.000000      2.000000     14.500000   \n",
       "max       99.000000    265.000000    265.000000      4.000000    999.990000   \n",
       "\n",
       "              extra       mta_tax    tip_amount  tolls_amount  \\\n",
       "count  22699.000000  22699.000000  22699.000000  22699.000000   \n",
       "mean       0.333275      0.497445      1.835781      0.312542   \n",
       "std        0.463097      0.039465      2.800626      1.399212   \n",
       "min       -1.000000     -0.500000      0.000000      0.000000   \n",
       "25%        0.000000      0.500000      0.000000      0.000000   \n",
       "50%        0.000000      0.500000      1.350000      0.000000   \n",
       "75%        0.500000      0.500000      2.450000      0.000000   \n",
       "max        4.500000      0.500000    200.000000     19.100000   \n",
       "\n",
       "       improvement_surcharge  total_amount  \n",
       "count           22699.000000  22699.000000  \n",
       "mean                0.299551     16.310502  \n",
       "std                 0.015673     16.097295  \n",
       "min                -0.300000   -120.300000  \n",
       "25%                 0.300000      8.750000  \n",
       "50%                 0.300000     11.800000  \n",
       "75%                 0.300000     17.800000  \n",
       "max                 0.300000   1200.290000  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Display descriptive stats about the data\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84981a9c",
   "metadata": {
    "id": "9FRKZtHm3EM7",
    "papermill": {
     "duration": 0.023799,
     "end_time": "2024-05-12T19:15:27.766441",
     "exception": false,
     "start_time": "2024-05-12T19:15:27.742642",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Some things stand out from this table of summary statistics. For instance, there are clearly some outliers in several variables, like `tip_amount` (\\$200) and `total_amount` (\\$1,200). Also, a number of the variables, such as `mta_tax`, seem to be almost constant throughout the data, which would imply that they would not be expected to be very predictive."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "07363883",
   "metadata": {
    "papermill": {
     "duration": 0.023929,
     "end_time": "2024-05-12T19:15:27.814558",
     "exception": false,
     "start_time": "2024-05-12T19:15:27.790629",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 2b. Convert pickup & dropoff columns to datetime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "85e51d8f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:27.865616Z",
     "iopub.status.busy": "2024-05-12T19:15:27.864688Z",
     "iopub.status.idle": "2024-05-12T19:15:27.871199Z",
     "shell.execute_reply": "2024-05-12T19:15:27.870273Z"
    },
    "id": "btROUPKa3gYh",
    "papermill": {
     "duration": 0.034458,
     "end_time": "2024-05-12T19:15:27.873340",
     "exception": false,
     "start_time": "2024-05-12T19:15:27.838882",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'03/25/2017 9:09:47 AM'"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check the format of the data\n",
    "df['tpep_dropoff_datetime'][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "9ec25f2e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:27.924486Z",
     "iopub.status.busy": "2024-05-12T19:15:27.923431Z",
     "iopub.status.idle": "2024-05-12T19:15:28.127595Z",
     "shell.execute_reply": "2024-05-12T19:15:28.126261Z"
    },
    "id": "suC4LJFPMPCo",
    "outputId": "65de0b5c-3aba-4aa8-ab9e-3e4bc04ee01a",
    "papermill": {
     "duration": 0.231984,
     "end_time": "2024-05-12T19:15:28.129873",
     "exception": false,
     "start_time": "2024-05-12T19:15:27.897889",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data type of tpep_pickup_datetime: object\n",
      "Data type of tpep_dropoff_datetime: object\n",
      "Data type of tpep_pickup_datetime: datetime64[ns]\n",
      "Data type of tpep_dropoff_datetime: datetime64[ns]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>VendorID</th>\n",
       "      <th>tpep_pickup_datetime</th>\n",
       "      <th>tpep_dropoff_datetime</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>store_and_fwd_flag</th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>DOLocationID</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>extra</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>total_amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>24870114</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-03-25 08:55:43</td>\n",
       "      <td>2017-03-25 09:09:47</td>\n",
       "      <td>6</td>\n",
       "      <td>3.34</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>100</td>\n",
       "      <td>231</td>\n",
       "      <td>1</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>2.76</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.3</td>\n",
       "      <td>16.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>35634249</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-04-11 14:53:28</td>\n",
       "      <td>2017-04-11 15:19:58</td>\n",
       "      <td>1</td>\n",
       "      <td>1.80</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>186</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>16.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>4.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.3</td>\n",
       "      <td>20.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>106203690</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-12-15 07:26:56</td>\n",
       "      <td>2017-12-15 07:34:08</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>262</td>\n",
       "      <td>236</td>\n",
       "      <td>1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1.45</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.3</td>\n",
       "      <td>8.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0  VendorID tpep_pickup_datetime tpep_dropoff_datetime  \\\n",
       "0    24870114         2  2017-03-25 08:55:43   2017-03-25 09:09:47   \n",
       "1    35634249         1  2017-04-11 14:53:28   2017-04-11 15:19:58   \n",
       "2   106203690         1  2017-12-15 07:26:56   2017-12-15 07:34:08   \n",
       "\n",
       "   passenger_count  trip_distance  RatecodeID store_and_fwd_flag  \\\n",
       "0                6           3.34           1                  N   \n",
       "1                1           1.80           1                  N   \n",
       "2                1           1.00           1                  N   \n",
       "\n",
       "   PULocationID  DOLocationID  payment_type  fare_amount  extra  mta_tax  \\\n",
       "0           100           231             1         13.0    0.0      0.5   \n",
       "1           186            43             1         16.0    0.0      0.5   \n",
       "2           262           236             1          6.5    0.0      0.5   \n",
       "\n",
       "   tip_amount  tolls_amount  improvement_surcharge  total_amount  \n",
       "0        2.76           0.0                    0.3         16.56  \n",
       "1        4.00           0.0                    0.3         20.80  \n",
       "2        1.45           0.0                    0.3          8.75  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Convert datetime columns to datetime\n",
    "# Display data types of `tpep_pickup_datetime`, `tpep_dropoff_datetime`\n",
    "print('Data type of tpep_pickup_datetime:', df['tpep_pickup_datetime'].dtype)\n",
    "print('Data type of tpep_dropoff_datetime:', df['tpep_dropoff_datetime'].dtype)\n",
    "\n",
    "# Convert `tpep_pickup_datetime` to datetime format\n",
    "df['tpep_pickup_datetime'] = pd.to_datetime(df['tpep_pickup_datetime'], format='%m/%d/%Y %I:%M:%S %p')\n",
    "\n",
    "# Convert `tpep_dropoff_datetime` to datetime format\n",
    "df['tpep_dropoff_datetime'] = pd.to_datetime(df['tpep_dropoff_datetime'], format='%m/%d/%Y %I:%M:%S %p')\n",
    "\n",
    "# Display data types of `tpep_pickup_datetime`, `tpep_dropoff_datetime`\n",
    "print('Data type of tpep_pickup_datetime:', df['tpep_pickup_datetime'].dtype)\n",
    "print('Data type of tpep_dropoff_datetime:', df['tpep_dropoff_datetime'].dtype)\n",
    "\n",
    "df.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54955bed",
   "metadata": {
    "id": "7dcytBKhiGAr",
    "papermill": {
     "duration": 0.02583,
     "end_time": "2024-05-12T19:15:28.180493",
     "exception": false,
     "start_time": "2024-05-12T19:15:28.154663",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 2c. Create duration column"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "680bb033",
   "metadata": {
    "id": "W5bCdL5SSfg1",
    "outputId": "f8a754e3-8234-414f-92dd-721ea6d97dc0",
    "papermill": {
     "duration": 0.024385,
     "end_time": "2024-05-12T19:15:28.230598",
     "exception": false,
     "start_time": "2024-05-12T19:15:28.206213",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Create a new column called `duration` that represents the total number of minutes that each taxi ride took."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "76efc784",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:28.282452Z",
     "iopub.status.busy": "2024-05-12T19:15:28.281472Z",
     "iopub.status.idle": "2024-05-12T19:15:28.311590Z",
     "shell.execute_reply": "2024-05-12T19:15:28.310314Z"
    },
    "id": "gS7VR2S0izZE",
    "papermill": {
     "duration": 0.058785,
     "end_time": "2024-05-12T19:15:28.314010",
     "exception": false,
     "start_time": "2024-05-12T19:15:28.255225",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>VendorID</th>\n",
       "      <th>tpep_pickup_datetime</th>\n",
       "      <th>tpep_dropoff_datetime</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>store_and_fwd_flag</th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>DOLocationID</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>extra</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>duration</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>24870114</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-03-25 08:55:43</td>\n",
       "      <td>2017-03-25 09:09:47</td>\n",
       "      <td>6</td>\n",
       "      <td>3.34</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>100</td>\n",
       "      <td>231</td>\n",
       "      <td>1</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>2.76</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>16.56</td>\n",
       "      <td>14.066667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>35634249</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-04-11 14:53:28</td>\n",
       "      <td>2017-04-11 15:19:58</td>\n",
       "      <td>1</td>\n",
       "      <td>1.80</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>186</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>16.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>4.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>20.80</td>\n",
       "      <td>26.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>106203690</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-12-15 07:26:56</td>\n",
       "      <td>2017-12-15 07:34:08</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>262</td>\n",
       "      <td>236</td>\n",
       "      <td>1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1.45</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>8.75</td>\n",
       "      <td>7.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>38942136</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-05-07 13:17:59</td>\n",
       "      <td>2017-05-07 13:48:14</td>\n",
       "      <td>1</td>\n",
       "      <td>3.70</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>188</td>\n",
       "      <td>97</td>\n",
       "      <td>1</td>\n",
       "      <td>20.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>6.39</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>27.69</td>\n",
       "      <td>30.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>30841670</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-04-15 23:32:20</td>\n",
       "      <td>2017-04-15 23:49:03</td>\n",
       "      <td>1</td>\n",
       "      <td>4.37</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>4</td>\n",
       "      <td>112</td>\n",
       "      <td>2</td>\n",
       "      <td>16.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>17.80</td>\n",
       "      <td>16.716667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22694</th>\n",
       "      <td>14873857</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-02-24 17:37:23</td>\n",
       "      <td>2017-02-24 17:40:39</td>\n",
       "      <td>3</td>\n",
       "      <td>0.61</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>48</td>\n",
       "      <td>186</td>\n",
       "      <td>2</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>5.80</td>\n",
       "      <td>3.266667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22695</th>\n",
       "      <td>66632549</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-08-06 16:43:59</td>\n",
       "      <td>2017-08-06 17:24:47</td>\n",
       "      <td>1</td>\n",
       "      <td>16.71</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>164</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>14.64</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>73.20</td>\n",
       "      <td>40.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22696</th>\n",
       "      <td>74239933</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-09-04 14:54:14</td>\n",
       "      <td>2017-09-04 14:58:22</td>\n",
       "      <td>1</td>\n",
       "      <td>0.42</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>107</td>\n",
       "      <td>234</td>\n",
       "      <td>2</td>\n",
       "      <td>4.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>5.30</td>\n",
       "      <td>4.133333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22697</th>\n",
       "      <td>60217333</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-07-15 12:56:30</td>\n",
       "      <td>2017-07-15 13:08:26</td>\n",
       "      <td>1</td>\n",
       "      <td>2.36</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>68</td>\n",
       "      <td>144</td>\n",
       "      <td>1</td>\n",
       "      <td>10.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1.70</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>13.00</td>\n",
       "      <td>11.933333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22698</th>\n",
       "      <td>17208911</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-03-02 13:02:49</td>\n",
       "      <td>2017-03-02 13:16:09</td>\n",
       "      <td>1</td>\n",
       "      <td>2.10</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>239</td>\n",
       "      <td>236</td>\n",
       "      <td>1</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>2.35</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>14.15</td>\n",
       "      <td>13.333333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>22699 rows × 19 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Unnamed: 0  VendorID tpep_pickup_datetime tpep_dropoff_datetime  \\\n",
       "0        24870114         2  2017-03-25 08:55:43   2017-03-25 09:09:47   \n",
       "1        35634249         1  2017-04-11 14:53:28   2017-04-11 15:19:58   \n",
       "2       106203690         1  2017-12-15 07:26:56   2017-12-15 07:34:08   \n",
       "3        38942136         2  2017-05-07 13:17:59   2017-05-07 13:48:14   \n",
       "4        30841670         2  2017-04-15 23:32:20   2017-04-15 23:49:03   \n",
       "...           ...       ...                  ...                   ...   \n",
       "22694    14873857         2  2017-02-24 17:37:23   2017-02-24 17:40:39   \n",
       "22695    66632549         2  2017-08-06 16:43:59   2017-08-06 17:24:47   \n",
       "22696    74239933         2  2017-09-04 14:54:14   2017-09-04 14:58:22   \n",
       "22697    60217333         2  2017-07-15 12:56:30   2017-07-15 13:08:26   \n",
       "22698    17208911         1  2017-03-02 13:02:49   2017-03-02 13:16:09   \n",
       "\n",
       "       passenger_count  trip_distance  RatecodeID store_and_fwd_flag  \\\n",
       "0                    6           3.34           1                  N   \n",
       "1                    1           1.80           1                  N   \n",
       "2                    1           1.00           1                  N   \n",
       "3                    1           3.70           1                  N   \n",
       "4                    1           4.37           1                  N   \n",
       "...                ...            ...         ...                ...   \n",
       "22694                3           0.61           1                  N   \n",
       "22695                1          16.71           2                  N   \n",
       "22696                1           0.42           1                  N   \n",
       "22697                1           2.36           1                  N   \n",
       "22698                1           2.10           1                  N   \n",
       "\n",
       "       PULocationID  DOLocationID  payment_type  fare_amount  extra  mta_tax  \\\n",
       "0               100           231             1         13.0    0.0      0.5   \n",
       "1               186            43             1         16.0    0.0      0.5   \n",
       "2               262           236             1          6.5    0.0      0.5   \n",
       "3               188            97             1         20.5    0.0      0.5   \n",
       "4                 4           112             2         16.5    0.5      0.5   \n",
       "...             ...           ...           ...          ...    ...      ...   \n",
       "22694            48           186             2          4.0    1.0      0.5   \n",
       "22695           132           164             1         52.0    0.0      0.5   \n",
       "22696           107           234             2          4.5    0.0      0.5   \n",
       "22697            68           144             1         10.5    0.0      0.5   \n",
       "22698           239           236             1         11.0    0.0      0.5   \n",
       "\n",
       "       tip_amount  tolls_amount  improvement_surcharge  total_amount  \\\n",
       "0            2.76          0.00                    0.3         16.56   \n",
       "1            4.00          0.00                    0.3         20.80   \n",
       "2            1.45          0.00                    0.3          8.75   \n",
       "3            6.39          0.00                    0.3         27.69   \n",
       "4            0.00          0.00                    0.3         17.80   \n",
       "...           ...           ...                    ...           ...   \n",
       "22694        0.00          0.00                    0.3          5.80   \n",
       "22695       14.64          5.76                    0.3         73.20   \n",
       "22696        0.00          0.00                    0.3          5.30   \n",
       "22697        1.70          0.00                    0.3         13.00   \n",
       "22698        2.35          0.00                    0.3         14.15   \n",
       "\n",
       "        duration  \n",
       "0      14.066667  \n",
       "1      26.500000  \n",
       "2       7.200000  \n",
       "3      30.250000  \n",
       "4      16.716667  \n",
       "...          ...  \n",
       "22694   3.266667  \n",
       "22695  40.800000  \n",
       "22696   4.133333  \n",
       "22697  11.933333  \n",
       "22698  13.333333  \n",
       "\n",
       "[22699 rows x 19 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create `duration` column\n",
    "df['duration'] = (df['tpep_dropoff_datetime'] - df['tpep_pickup_datetime'])/np.timedelta64(1,'m')\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e039b900",
   "metadata": {
    "id": "YhRKv1xzCniK",
    "papermill": {
     "duration": 0.024948,
     "end_time": "2024-05-12T19:15:28.364433",
     "exception": false,
     "start_time": "2024-05-12T19:15:28.339485",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Outliers\n",
    "\n",
    "Call `df.info()` to inspect the columns and decide which ones to check for outliers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4eadb03f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:28.417375Z",
     "iopub.status.busy": "2024-05-12T19:15:28.416495Z",
     "iopub.status.idle": "2024-05-12T19:15:28.430201Z",
     "shell.execute_reply": "2024-05-12T19:15:28.428990Z"
    },
    "id": "EAGOvwrxDRDr",
    "outputId": "43372781-7a87-4dbc-fa9a-36aedded54b1",
    "papermill": {
     "duration": 0.042843,
     "end_time": "2024-05-12T19:15:28.432627",
     "exception": false,
     "start_time": "2024-05-12T19:15:28.389784",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 22699 entries, 0 to 22698\n",
      "Data columns (total 19 columns):\n",
      " #   Column                 Non-Null Count  Dtype         \n",
      "---  ------                 --------------  -----         \n",
      " 0   Unnamed: 0             22699 non-null  int64         \n",
      " 1   VendorID               22699 non-null  int64         \n",
      " 2   tpep_pickup_datetime   22699 non-null  datetime64[ns]\n",
      " 3   tpep_dropoff_datetime  22699 non-null  datetime64[ns]\n",
      " 4   passenger_count        22699 non-null  int64         \n",
      " 5   trip_distance          22699 non-null  float64       \n",
      " 6   RatecodeID             22699 non-null  int64         \n",
      " 7   store_and_fwd_flag     22699 non-null  object        \n",
      " 8   PULocationID           22699 non-null  int64         \n",
      " 9   DOLocationID           22699 non-null  int64         \n",
      " 10  payment_type           22699 non-null  int64         \n",
      " 11  fare_amount            22699 non-null  float64       \n",
      " 12  extra                  22699 non-null  float64       \n",
      " 13  mta_tax                22699 non-null  float64       \n",
      " 14  tip_amount             22699 non-null  float64       \n",
      " 15  tolls_amount           22699 non-null  float64       \n",
      " 16  improvement_surcharge  22699 non-null  float64       \n",
      " 17  total_amount           22699 non-null  float64       \n",
      " 18  duration               22699 non-null  float64       \n",
      "dtypes: datetime64[ns](2), float64(9), int64(7), object(1)\n",
      "memory usage: 3.3+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1af98c53",
   "metadata": {
    "id": "-LSCP19IjnZ3",
    "outputId": "ef2158fa-e60b-4b0b-cd24-9627d257289f",
    "papermill": {
     "duration": 0.026039,
     "end_time": "2024-05-12T19:15:28.485162",
     "exception": false,
     "start_time": "2024-05-12T19:15:28.459123",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Keeping in mind that many of the features will not be used to fit your model, the most important columns to check for outliers are likely to be:\n",
    "* `trip_distance`\n",
    "* `fare_amount`\n",
    "* `duration`\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "250d1250",
   "metadata": {
    "id": "DKRGdmP7DC8f",
    "papermill": {
     "duration": 0.025069,
     "end_time": "2024-05-12T19:15:28.535953",
     "exception": false,
     "start_time": "2024-05-12T19:15:28.510884",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 2d. Box plots\n",
    "\n",
    "Plot a box plot for each feature: `trip_distance`, `fare_amount`, `duration`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "10772be1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:28.590228Z",
     "iopub.status.busy": "2024-05-12T19:15:28.589264Z",
     "iopub.status.idle": "2024-05-12T19:15:28.964175Z",
     "shell.execute_reply": "2024-05-12T19:15:28.963009Z"
    },
    "id": "nG-Ngt0FCE9M",
    "outputId": "8d0055f5-a490-4ab0-fe0b-9f566ea60340",
    "papermill": {
     "duration": 0.404392,
     "end_time": "2024-05-12T19:15:28.966398",
     "exception": false,
     "start_time": "2024-05-12T19:15:28.562006",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x200 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axes = plt.subplots(1, 3, figsize=(15, 2))\n",
    "fig.suptitle('Boxplots for outlier detection')\n",
    "sns.boxplot(ax=axes[0], x=df['trip_distance'])\n",
    "sns.boxplot(ax=axes[1], x=df['fare_amount'])\n",
    "sns.boxplot(ax=axes[2], x=df['duration'])\n",
    "plt.show();"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2b69254f",
   "metadata": {
    "papermill": {
     "duration": 0.025435,
     "end_time": "2024-05-12T19:15:29.017507",
     "exception": false,
     "start_time": "2024-05-12T19:15:28.992072",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "1. All three variables contain outliers. Some are extreme, but others not so much.\n",
    "\n",
    "2. It's 30 miles from the southern tip of Staten Island to the northern end of Manhattan and that's in a straight line. With this knowledge and the distribution of the values in this column, it's reasonable to leave these values alone and not alter them. However, the values for `fare_amount` and `duration` definitely seem to have problematic outliers on the higher end.\n",
    "\n",
    "3. Probably not for the latter two, but for `trip_distance` it might be okay."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2efd5c97",
   "metadata": {
    "id": "Vtj4iAJMk9Vc",
    "papermill": {
     "duration": 0.025521,
     "end_time": "2024-05-12T19:15:29.068820",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.043299",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 2e. Imputations"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04be3a40",
   "metadata": {
    "id": "PfWU7BVP3f7E",
    "papermill": {
     "duration": 0.02539,
     "end_time": "2024-05-12T19:15:29.119952",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.094562",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### `trip_distance` outliers\n",
    "\n",
    "You know from the summary statistics that there are trip distances of 0. Are these reflective of erroneous data, or are they very short trips that get rounded down?\n",
    "\n",
    "To check, sort the column values, eliminate duplicates, and inspect the least 10 values. Are they rounded values or precise values?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "35adc341",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:29.173088Z",
     "iopub.status.busy": "2024-05-12T19:15:29.172678Z",
     "iopub.status.idle": "2024-05-12T19:15:29.185042Z",
     "shell.execute_reply": "2024-05-12T19:15:29.183489Z"
    },
    "id": "KCEzE-gwL5gq",
    "outputId": "36c88d36-18d6-4556-c762-2b007e48bbd0",
    "papermill": {
     "duration": 0.041552,
     "end_time": "2024-05-12T19:15:29.187207",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.145655",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0.0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Are trip distances of 0 bad data or very short trips rounded down?\n",
    "sorted(set(df['trip_distance']))[:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a846fd8",
   "metadata": {
    "id": "pqcGiHLa4TvP",
    "papermill": {
     "duration": 0.025575,
     "end_time": "2024-05-12T19:15:29.238750",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.213175",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The distances are captured with a high degree of precision. However, it might be possible for trips to have distances of zero if a passenger summoned a taxi and then changed their mind. Besides, are there enough zero values in the data to pose a problem?\n",
    "\n",
    "Calculate the count of rides where the `trip_distance` is zero."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "00b9a6af",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:29.292600Z",
     "iopub.status.busy": "2024-05-12T19:15:29.291635Z",
     "iopub.status.idle": "2024-05-12T19:15:29.300905Z",
     "shell.execute_reply": "2024-05-12T19:15:29.299912Z"
    },
    "papermill": {
     "duration": 0.038408,
     "end_time": "2024-05-12T19:15:29.303039",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.264631",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "148"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum(df['trip_distance']==0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c71d2e3",
   "metadata": {
    "papermill": {
     "duration": 0.02548,
     "end_time": "2024-05-12T19:15:29.354505",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.329025",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "148 out of ~23,000 rides is relatively insignificant. You could impute it with a value of 0.01, but it's unlikely to have much of an effect on the model. Therefore, the `trip_distance` column will remain untouched with regard to outliers."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8040c6b",
   "metadata": {
    "papermill": {
     "duration": 0.025435,
     "end_time": "2024-05-12T19:15:29.405865",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.380430",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### `fare_amount` outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "49e5dfee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:29.460612Z",
     "iopub.status.busy": "2024-05-12T19:15:29.459897Z",
     "iopub.status.idle": "2024-05-12T19:15:29.470611Z",
     "shell.execute_reply": "2024-05-12T19:15:29.469618Z"
    },
    "papermill": {
     "duration": 0.040178,
     "end_time": "2024-05-12T19:15:29.472798",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.432620",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    22699.000000\n",
       "mean        13.026629\n",
       "std         13.243791\n",
       "min       -120.000000\n",
       "25%          6.500000\n",
       "50%          9.500000\n",
       "75%         14.500000\n",
       "max        999.990000\n",
       "Name: fare_amount, dtype: float64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['fare_amount'].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f3b4853",
   "metadata": {
    "papermill": {
     "duration": 0.025937,
     "end_time": "2024-05-12T19:15:29.524878",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.498941",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The range of values in the `fare_amount` column is large and the extremes don't make much sense.\n",
    "\n",
    "* **Low values:** Negative values are problematic. Values of zero could be legitimate if the taxi logged a trip that was immediately canceled.\n",
    "\n",
    "* **High values:** The maximum fare amount in this dataset is nearly $1000, which seems very unlikely High values for this feature can be capped based on intuition and statistics.\n",
    "\n",
    "The interquartile range (IQR) is $8. \n",
    "\n",
    "The standard formula of `Q3 + (1.5 * IQR)` yields $26.50.\n",
    "\n",
    "That doesn't seem appropriate for the maximum fare cap In this case, we'll use a factor of `6`, which results in a cap of $62.50.\n",
    "\n",
    "Impute values less than $0 with `0`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "7006c3c7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:29.578865Z",
     "iopub.status.busy": "2024-05-12T19:15:29.578507Z",
     "iopub.status.idle": "2024-05-12T19:15:29.587635Z",
     "shell.execute_reply": "2024-05-12T19:15:29.586408Z"
    },
    "papermill": {
     "duration": 0.039136,
     "end_time": "2024-05-12T19:15:29.590147",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.551011",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Impute values less than $0 with 0\n",
    "df.loc[df['fare_amount'] < 0, 'fare_amount'] = 0\n",
    "df['fare_amount'].min()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4dcb0185",
   "metadata": {
    "papermill": {
     "duration": 0.027543,
     "end_time": "2024-05-12T19:15:29.645041",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.617498",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now impute the maximum value as `Q3 + (6 * IQR)`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "678cd5a1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:29.700646Z",
     "iopub.status.busy": "2024-05-12T19:15:29.700231Z",
     "iopub.status.idle": "2024-05-12T19:15:29.708143Z",
     "shell.execute_reply": "2024-05-12T19:15:29.706970Z"
    },
    "papermill": {
     "duration": 0.03839,
     "end_time": "2024-05-12T19:15:29.710328",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.671938",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def outlier_imputer(column_list, iqr_factor):\n",
    "    '''\n",
    "    Impute upper-limit values in specified columns based on their interquartile range.\n",
    "\n",
    "    Arguments:\n",
    "        column_list: A list of columns to iterate over\n",
    "        iqr_factor: A number representing x in the formula:\n",
    "                    Q3 + (x * IQR). Used to determine maximum threshold,\n",
    "                    beyond which a point is considered an outlier.\n",
    "\n",
    "    The IQR is computed for each column in column_list and values exceeding\n",
    "    the upper threshold for each column are imputed with the upper threshold value.\n",
    "    '''\n",
    "    for col in column_list:\n",
    "        # Reassign minimum to zero\n",
    "        df.loc[df[col] < 0, col] = 0\n",
    "\n",
    "        # Calculate upper threshold\n",
    "        q1 = df[col].quantile(0.25)\n",
    "        q3 = df[col].quantile(0.75)\n",
    "        iqr = q3 - q1\n",
    "        upper_threshold = q3 + (iqr_factor * iqr)\n",
    "        print(col)\n",
    "        print('q3:', q3)\n",
    "        print('upper_threshold:', upper_threshold)\n",
    "\n",
    "        # Reassign values > threshold to threshold\n",
    "        df.loc[df[col] > upper_threshold, col] = upper_threshold\n",
    "        print(df[col].describe())\n",
    "        print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "fe66557f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:29.764863Z",
     "iopub.status.busy": "2024-05-12T19:15:29.764454Z",
     "iopub.status.idle": "2024-05-12T19:15:29.778394Z",
     "shell.execute_reply": "2024-05-12T19:15:29.777142Z"
    },
    "papermill": {
     "duration": 0.044094,
     "end_time": "2024-05-12T19:15:29.780864",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.736770",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "fare_amount\n",
      "q3: 14.5\n",
      "upper_threshold: 62.5\n",
      "count    22699.000000\n",
      "mean        12.897913\n",
      "std         10.541137\n",
      "min          0.000000\n",
      "25%          6.500000\n",
      "50%          9.500000\n",
      "75%         14.500000\n",
      "max         62.500000\n",
      "Name: fare_amount, dtype: float64\n",
      "\n"
     ]
    }
   ],
   "source": [
    "outlier_imputer(['fare_amount'], 6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e25a999",
   "metadata": {
    "papermill": {
     "duration": 0.026443,
     "end_time": "2024-05-12T19:15:29.834558",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.808115",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### `duration` outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "603b881d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:29.889577Z",
     "iopub.status.busy": "2024-05-12T19:15:29.889160Z",
     "iopub.status.idle": "2024-05-12T19:15:29.900014Z",
     "shell.execute_reply": "2024-05-12T19:15:29.899025Z"
    },
    "papermill": {
     "duration": 0.040711,
     "end_time": "2024-05-12T19:15:29.902068",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.861357",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    22699.000000\n",
       "mean        17.013777\n",
       "std         61.996482\n",
       "min        -16.983333\n",
       "25%          6.650000\n",
       "50%         11.183333\n",
       "75%         18.383333\n",
       "max       1439.550000\n",
       "Name: duration, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['duration'].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4aef2e45",
   "metadata": {
    "papermill": {
     "duration": 0.026304,
     "end_time": "2024-05-12T19:15:29.954813",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.928509",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The `duration` column has problematic values at both the lower and upper extremities.\n",
    "\n",
    "* **Low values:** There should be no values that represent negative time. Impute all negative durations with `0`.\n",
    "\n",
    "* **High values:** Impute high values the same way you imputed the high-end outliers for fares: `Q3 + (6 * IQR)`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "bc89301e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:30.009879Z",
     "iopub.status.busy": "2024-05-12T19:15:30.009459Z",
     "iopub.status.idle": "2024-05-12T19:15:30.018542Z",
     "shell.execute_reply": "2024-05-12T19:15:30.017474Z"
    },
    "papermill": {
     "duration": 0.039082,
     "end_time": "2024-05-12T19:15:30.020601",
     "exception": false,
     "start_time": "2024-05-12T19:15:29.981519",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Impute a 0 for any negative values\n",
    "df.loc[df['duration'] < 0, 'duration'] = 0\n",
    "df['duration'].min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "88593b7a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:30.076281Z",
     "iopub.status.busy": "2024-05-12T19:15:30.075415Z",
     "iopub.status.idle": "2024-05-12T19:15:30.089167Z",
     "shell.execute_reply": "2024-05-12T19:15:30.088021Z"
    },
    "papermill": {
     "duration": 0.044447,
     "end_time": "2024-05-12T19:15:30.091601",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.047154",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "duration\n",
      "q3: 18.383333333333333\n",
      "upper_threshold: 88.78333333333333\n",
      "count    22699.000000\n",
      "mean        14.460555\n",
      "std         11.947043\n",
      "min          0.000000\n",
      "25%          6.650000\n",
      "50%         11.183333\n",
      "75%         18.383333\n",
      "max         88.783333\n",
      "Name: duration, dtype: float64\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Impute the high outliers\n",
    "outlier_imputer(['duration'], 6)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4f3c0c0f",
   "metadata": {
    "papermill": {
     "duration": 0.027028,
     "end_time": "2024-05-12T19:15:30.145910",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.118882",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 3a. Feature engineering"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4c9b672a",
   "metadata": {
    "papermill": {
     "duration": 0.028297,
     "end_time": "2024-05-12T19:15:30.201716",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.173419",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Create `mean_distance` column\n",
    "\n",
    "When deployed, the model will not know the duration of a trip until after the trip occurs, so you cannot train a model that uses this feature. However, you can use the statistics of trips you *do* know to generalize about ones you do not know.\n",
    "\n",
    "In this step, create a column called `mean_distance` that captures the mean distance for each group of trips that share pickup and dropoff points.\n",
    "\n",
    "For example, if your data were:\n",
    "\n",
    "|Trip|Start|End|Distance|\n",
    "|--: |:---:|:-:|    |\n",
    "| 1  | A   | B | 1  |\n",
    "| 2  | C   | D | 2  |\n",
    "| 3  | A   | B |1.5 |\n",
    "| 4  | D   | C | 3  |\n",
    "\n",
    "The results should be:\n",
    "```\n",
    "A -> B: 1.25 miles\n",
    "C -> D: 2 miles\n",
    "D -> C: 3 miles\n",
    "```\n",
    "\n",
    "Notice that C -> D is not the same as D -> C. All trips that share a unique pair of start and end points get grouped and averaged.\n",
    "\n",
    "Then, a new column `mean_distance` will be added where the value at each row is the average for all trips with those pickup and dropoff locations:\n",
    "\n",
    "|Trip|Start|End|Distance|mean_distance|\n",
    "|--: |:---:|:-:|  :--   |:--   |\n",
    "| 1  | A   | B | 1      | 1.25 |\n",
    "| 2  | C   | D | 2      | 2    |\n",
    "| 3  | A   | B |1.5     | 1.25 |\n",
    "| 4  | D   | C | 3      | 3    |\n",
    "\n",
    "\n",
    "Begin by creating a helper column called `pickup_dropoff`, which contains the unique combination of pickup and dropoff location IDs for each row.\n",
    "\n",
    "One way to do this is to convert the pickup and dropoff location IDs to strings and join them, separated by a space. The space is to ensure that, for example, a trip with pickup/dropoff points of 12 & 151 gets encoded differently than a trip with points 121 & 51.\n",
    "\n",
    "So, the new column would look like this:\n",
    "\n",
    "|Trip|Start|End|pickup_dropoff|\n",
    "|--: |:---:|:-:|  :--         |\n",
    "| 1  | A   | B | 'A B'        |\n",
    "| 2  | C   | D | 'C D'        |\n",
    "| 3  | A   | B | 'A B'        |\n",
    "| 4  | D   | C | 'D C'        |\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "cdabdc8d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:30.258476Z",
     "iopub.status.busy": "2024-05-12T19:15:30.257509Z",
     "iopub.status.idle": "2024-05-12T19:15:30.286165Z",
     "shell.execute_reply": "2024-05-12T19:15:30.285179Z"
    },
    "papermill": {
     "duration": 0.059284,
     "end_time": "2024-05-12T19:15:30.288310",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.229026",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    100 231\n",
       "1     186 43\n",
       "Name: pickup_dropoff, dtype: object"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create `pickup_dropoff` column\n",
    "df['pickup_dropoff'] = df['PULocationID'].astype(str) + ' ' + df['DOLocationID'].astype(str)\n",
    "df['pickup_dropoff'].head(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c159a3ed",
   "metadata": {
    "papermill": {
     "duration": 0.026659,
     "end_time": "2024-05-12T19:15:30.341862",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.315203",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now, use a `groupby()` statement to group each row by the new `pickup_dropoff` column, compute the mean, and capture the values only in the `trip_distance` column. Assign the results to a variable named `grouped`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "88943bbe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:30.397251Z",
     "iopub.status.busy": "2024-05-12T19:15:30.396838Z",
     "iopub.status.idle": "2024-05-12T19:15:30.420895Z",
     "shell.execute_reply": "2024-05-12T19:15:30.419756Z"
    },
    "papermill": {
     "duration": 0.054512,
     "end_time": "2024-05-12T19:15:30.423148",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.368636",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>trip_distance</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>pickup_dropoff</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1 1</th>\n",
       "      <td>2.433333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10 148</th>\n",
       "      <td>15.700000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100 1</th>\n",
       "      <td>16.890000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100 100</th>\n",
       "      <td>0.253333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100 107</th>\n",
       "      <td>1.180000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                trip_distance\n",
       "pickup_dropoff               \n",
       "1 1                  2.433333\n",
       "10 148              15.700000\n",
       "100 1               16.890000\n",
       "100 100              0.253333\n",
       "100 107              1.180000"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped = df.groupby('pickup_dropoff').mean(numeric_only=True)[['trip_distance']]\n",
    "grouped[:5]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ce000577",
   "metadata": {
    "papermill": {
     "duration": 0.026852,
     "end_time": "2024-05-12T19:15:30.478380",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.451528",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "`grouped` is an object of the `DataFrame` class.\n",
    "\n",
    "1. Convert it to a dictionary using the [`to_dict()`](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_dict.html) method. Assign the results to a variable called `grouped_dict`. This will result in a dictionary with a key of `trip_distance` whose values are another dictionary. The inner dictionary's keys are pickup/dropoff points and its values are mean distances. This is the information you want.\n",
    "\n",
    "```\n",
    "Example:\n",
    "grouped_dict = {'trip_distance': {'A B': 1.25, 'C D': 2, 'D C': 3}\n",
    "```\n",
    "\n",
    "2. Reassign the `grouped_dict` dictionary so it contains only the inner dictionary. In other words, get rid of `trip_distance` as a key, so:\n",
    "\n",
    "```\n",
    "Example:\n",
    "grouped_dict = {'A B': 1.25, 'C D': 2, 'D C': 3}\n",
    " ```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "f3b445a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:30.534839Z",
     "iopub.status.busy": "2024-05-12T19:15:30.533853Z",
     "iopub.status.idle": "2024-05-12T19:15:30.543773Z",
     "shell.execute_reply": "2024-05-12T19:15:30.542676Z"
    },
    "papermill": {
     "duration": 0.040837,
     "end_time": "2024-05-12T19:15:30.546222",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.505385",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# 1. Convert `grouped` to a dictionary\n",
    "grouped_dict = grouped.to_dict()\n",
    "\n",
    "# 2. Reassign to only contain the inner dictionary\n",
    "grouped_dict = grouped_dict['trip_distance']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eede10eb",
   "metadata": {
    "papermill": {
     "duration": 0.027164,
     "end_time": "2024-05-12T19:15:30.600732",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.573568",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "1. Create a `mean_distance` column that is a copy of the `pickup_dropoff` helper column.\n",
    "\n",
    "2. Use the [`map()`](https://pandas.pydata.org/docs/reference/api/pandas.Series.map.html#pandas-series-map) method on the `mean_distance` series. Pass `grouped_dict` as its argument. Reassign the result back to the `mean_distance` series.\n",
    "</br></br>\n",
    "When you pass a dictionary to the `Series.map()` method, it will replace the data in the series where that data matches the dictionary's keys. The values that get imputed are the values of the dictionary.\n",
    "\n",
    "```\n",
    "Example:\n",
    "df['mean_distance']\n",
    "```\n",
    "\n",
    "|mean_distance |\n",
    "|  :-:         |\n",
    "| 'A B'        |\n",
    "| 'C D'        |\n",
    "| 'A B'        |\n",
    "| 'D C'        |\n",
    "| 'E F'        |\n",
    "\n",
    "```\n",
    "grouped_dict = {'A B': 1.25, 'C D': 2, 'D C': 3}\n",
    "df['mean_distance`] = df['mean_distance'].map(grouped_dict)\n",
    "df['mean_distance']\n",
    "```\n",
    "\n",
    "|mean_distance |\n",
    "|  :-:         |\n",
    "| 1.25         |\n",
    "| 2            |\n",
    "| 1.25         |\n",
    "| 3            |\n",
    "| NaN          |\n",
    "\n",
    "When used this way, the `map()` `Series` method is very similar to `replace()`, however, note that `map()` will impute `NaN` for any values in the series that do not have a corresponding key in the mapping dictionary, so be careful."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "cdc3246e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:30.656689Z",
     "iopub.status.busy": "2024-05-12T19:15:30.656301Z",
     "iopub.status.idle": "2024-05-12T19:15:30.675246Z",
     "shell.execute_reply": "2024-05-12T19:15:30.674141Z"
    },
    "papermill": {
     "duration": 0.049342,
     "end_time": "2024-05-12T19:15:30.677464",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.628122",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mean_distance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3.521667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4909</th>\n",
       "      <td>3.521667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16636</th>\n",
       "      <td>3.521667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18134</th>\n",
       "      <td>3.521667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19761</th>\n",
       "      <td>3.521667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20581</th>\n",
       "      <td>3.521667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       mean_distance\n",
       "0           3.521667\n",
       "4909        3.521667\n",
       "16636       3.521667\n",
       "18134       3.521667\n",
       "19761       3.521667\n",
       "20581       3.521667"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 1. Create a mean_distance column that is a copy of the pickup_dropoff helper column\n",
    "df['mean_distance'] = df['pickup_dropoff']\n",
    "\n",
    "# 2. Map `grouped_dict` to the `mean_distance` column\n",
    "df['mean_distance'] = df['mean_distance'].map(grouped_dict)\n",
    "\n",
    "# Confirm that it worked\n",
    "df[(df['PULocationID']==100) & (df['DOLocationID']==231)][['mean_distance']]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7397cc9d",
   "metadata": {
    "papermill": {
     "duration": 0.027405,
     "end_time": "2024-05-12T19:15:30.732159",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.704754",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Create `mean_duration` column\n",
    "\n",
    "Repeat the process used to create the `mean_distance` column to create a `mean_duration` column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "23126ea9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:30.788578Z",
     "iopub.status.busy": "2024-05-12T19:15:30.788163Z",
     "iopub.status.idle": "2024-05-12T19:15:30.819778Z",
     "shell.execute_reply": "2024-05-12T19:15:30.818707Z"
    },
    "papermill": {
     "duration": 0.062554,
     "end_time": "2024-05-12T19:15:30.822044",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.759490",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mean_duration</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>22.847222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4909</th>\n",
       "      <td>22.847222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16636</th>\n",
       "      <td>22.847222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18134</th>\n",
       "      <td>22.847222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19761</th>\n",
       "      <td>22.847222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20581</th>\n",
       "      <td>22.847222</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       mean_duration\n",
       "0          22.847222\n",
       "4909       22.847222\n",
       "16636      22.847222\n",
       "18134      22.847222\n",
       "19761      22.847222\n",
       "20581      22.847222"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped = df.groupby('pickup_dropoff').mean(numeric_only=True)[['duration']]\n",
    "grouped\n",
    "\n",
    "# Create a dictionary where keys are unique pickup_dropoffs and values are\n",
    "# mean trip duration for all trips with those pickup_dropoff combos\n",
    "grouped_dict = grouped.to_dict()\n",
    "grouped_dict = grouped_dict['duration']\n",
    "\n",
    "df['mean_duration'] = df['pickup_dropoff']\n",
    "df['mean_duration'] = df['mean_duration'].map(grouped_dict)\n",
    "\n",
    "# Confirm that it worked\n",
    "df[(df['PULocationID']==100) & (df['DOLocationID']==231)][['mean_duration']]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aeb40f78",
   "metadata": {
    "papermill": {
     "duration": 0.027286,
     "end_time": "2024-05-12T19:15:30.877555",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.850269",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Create `day` and `month` columns\n",
    "\n",
    "Create two new columns, `day` (name of day) and `month` (name of month) by extracting the relevant information from the `tpep_pickup_datetime` column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "1c2693e2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:30.934497Z",
     "iopub.status.busy": "2024-05-12T19:15:30.934096Z",
     "iopub.status.idle": "2024-05-12T19:15:31.073125Z",
     "shell.execute_reply": "2024-05-12T19:15:31.072060Z"
    },
    "papermill": {
     "duration": 0.170569,
     "end_time": "2024-05-12T19:15:31.075784",
     "exception": false,
     "start_time": "2024-05-12T19:15:30.905215",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Create 'day' col\n",
    "df['day'] = df['tpep_pickup_datetime'].dt.day_name().str.lower()\n",
    "\n",
    "# Create 'month' col\n",
    "df['month'] = df['tpep_pickup_datetime'].dt.strftime('%b').str.lower()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb6297ff",
   "metadata": {
    "papermill": {
     "duration": 0.027214,
     "end_time": "2024-05-12T19:15:31.130673",
     "exception": false,
     "start_time": "2024-05-12T19:15:31.103459",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Create `rush_hour` column\n",
    "\n",
    "Define rush hour as:\n",
    "* Any weekday (not Saturday or Sunday) AND\n",
    "* Either from 06:00&ndash;10:00 or from 16:00&ndash;20:00\n",
    "\n",
    "Create a binary `rush_hour` column that contains a 1 if the ride was during rush hour and a 0 if it was not."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "0b005d5c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:31.201627Z",
     "iopub.status.busy": "2024-05-12T19:15:31.201113Z",
     "iopub.status.idle": "2024-05-12T19:15:31.214142Z",
     "shell.execute_reply": "2024-05-12T19:15:31.212895Z"
    },
    "papermill": {
     "duration": 0.053507,
     "end_time": "2024-05-12T19:15:31.216716",
     "exception": false,
     "start_time": "2024-05-12T19:15:31.163209",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Create 'rush_hour' col\n",
    "df['rush_hour'] = df['tpep_pickup_datetime'].dt.hour\n",
    "\n",
    "# If day is Saturday or Sunday, impute 0 in `rush_hour` column\n",
    "df.loc[df['day'].isin(['saturday', 'sunday']), 'rush_hour'] = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "5aa37d60",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:31.281000Z",
     "iopub.status.busy": "2024-05-12T19:15:31.279896Z",
     "iopub.status.idle": "2024-05-12T19:15:31.287740Z",
     "shell.execute_reply": "2024-05-12T19:15:31.286308Z"
    },
    "papermill": {
     "duration": 0.045399,
     "end_time": "2024-05-12T19:15:31.290527",
     "exception": false,
     "start_time": "2024-05-12T19:15:31.245128",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def rush_hourizer(hour):\n",
    "    if 6 <= hour['rush_hour'] < 10:\n",
    "        val = 1\n",
    "    elif 16 <= hour['rush_hour'] < 20:\n",
    "        val = 1\n",
    "    else:\n",
    "        val = 0\n",
    "    return val"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "a21aadc0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:31.359783Z",
     "iopub.status.busy": "2024-05-12T19:15:31.359374Z",
     "iopub.status.idle": "2024-05-12T19:15:31.699344Z",
     "shell.execute_reply": "2024-05-12T19:15:31.698340Z"
    },
    "papermill": {
     "duration": 0.374102,
     "end_time": "2024-05-12T19:15:31.701575",
     "exception": false,
     "start_time": "2024-05-12T19:15:31.327473",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>VendorID</th>\n",
       "      <th>tpep_pickup_datetime</th>\n",
       "      <th>tpep_dropoff_datetime</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>store_and_fwd_flag</th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>DOLocationID</th>\n",
       "      <th>...</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>duration</th>\n",
       "      <th>pickup_dropoff</th>\n",
       "      <th>mean_distance</th>\n",
       "      <th>mean_duration</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>rush_hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>24870114</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-03-25 08:55:43</td>\n",
       "      <td>2017-03-25 09:09:47</td>\n",
       "      <td>6</td>\n",
       "      <td>3.34</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>100</td>\n",
       "      <td>231</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.3</td>\n",
       "      <td>16.56</td>\n",
       "      <td>14.066667</td>\n",
       "      <td>100 231</td>\n",
       "      <td>3.521667</td>\n",
       "      <td>22.847222</td>\n",
       "      <td>saturday</td>\n",
       "      <td>mar</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>35634249</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-04-11 14:53:28</td>\n",
       "      <td>2017-04-11 15:19:58</td>\n",
       "      <td>1</td>\n",
       "      <td>1.80</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>186</td>\n",
       "      <td>43</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.3</td>\n",
       "      <td>20.80</td>\n",
       "      <td>26.500000</td>\n",
       "      <td>186 43</td>\n",
       "      <td>3.108889</td>\n",
       "      <td>24.470370</td>\n",
       "      <td>tuesday</td>\n",
       "      <td>apr</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>106203690</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-12-15 07:26:56</td>\n",
       "      <td>2017-12-15 07:34:08</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>262</td>\n",
       "      <td>236</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.3</td>\n",
       "      <td>8.75</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>262 236</td>\n",
       "      <td>0.881429</td>\n",
       "      <td>7.250000</td>\n",
       "      <td>friday</td>\n",
       "      <td>dec</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>38942136</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-05-07 13:17:59</td>\n",
       "      <td>2017-05-07 13:48:14</td>\n",
       "      <td>1</td>\n",
       "      <td>3.70</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>188</td>\n",
       "      <td>97</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.3</td>\n",
       "      <td>27.69</td>\n",
       "      <td>30.250000</td>\n",
       "      <td>188 97</td>\n",
       "      <td>3.700000</td>\n",
       "      <td>30.250000</td>\n",
       "      <td>sunday</td>\n",
       "      <td>may</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>30841670</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-04-15 23:32:20</td>\n",
       "      <td>2017-04-15 23:49:03</td>\n",
       "      <td>1</td>\n",
       "      <td>4.37</td>\n",
       "      <td>1</td>\n",
       "      <td>N</td>\n",
       "      <td>4</td>\n",
       "      <td>112</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.3</td>\n",
       "      <td>17.80</td>\n",
       "      <td>16.716667</td>\n",
       "      <td>4 112</td>\n",
       "      <td>4.435000</td>\n",
       "      <td>14.616667</td>\n",
       "      <td>saturday</td>\n",
       "      <td>apr</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0  VendorID tpep_pickup_datetime tpep_dropoff_datetime  \\\n",
       "0    24870114         2  2017-03-25 08:55:43   2017-03-25 09:09:47   \n",
       "1    35634249         1  2017-04-11 14:53:28   2017-04-11 15:19:58   \n",
       "2   106203690         1  2017-12-15 07:26:56   2017-12-15 07:34:08   \n",
       "3    38942136         2  2017-05-07 13:17:59   2017-05-07 13:48:14   \n",
       "4    30841670         2  2017-04-15 23:32:20   2017-04-15 23:49:03   \n",
       "\n",
       "   passenger_count  trip_distance  RatecodeID store_and_fwd_flag  \\\n",
       "0                6           3.34           1                  N   \n",
       "1                1           1.80           1                  N   \n",
       "2                1           1.00           1                  N   \n",
       "3                1           3.70           1                  N   \n",
       "4                1           4.37           1                  N   \n",
       "\n",
       "   PULocationID  DOLocationID  ...  tolls_amount  improvement_surcharge  \\\n",
       "0           100           231  ...           0.0                    0.3   \n",
       "1           186            43  ...           0.0                    0.3   \n",
       "2           262           236  ...           0.0                    0.3   \n",
       "3           188            97  ...           0.0                    0.3   \n",
       "4             4           112  ...           0.0                    0.3   \n",
       "\n",
       "   total_amount   duration  pickup_dropoff  mean_distance  mean_duration  \\\n",
       "0         16.56  14.066667         100 231       3.521667      22.847222   \n",
       "1         20.80  26.500000          186 43       3.108889      24.470370   \n",
       "2          8.75   7.200000         262 236       0.881429       7.250000   \n",
       "3         27.69  30.250000          188 97       3.700000      30.250000   \n",
       "4         17.80  16.716667           4 112       4.435000      14.616667   \n",
       "\n",
       "        day  month rush_hour  \n",
       "0  saturday    mar         0  \n",
       "1   tuesday    apr         0  \n",
       "2    friday    dec         1  \n",
       "3    sunday    may         0  \n",
       "4  saturday    apr         0  \n",
       "\n",
       "[5 rows x 25 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Apply the `rush_hourizer()` function to the new column\n",
    "df['rush_hour'] = df.apply(rush_hourizer, axis=1)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "450d4965",
   "metadata": {
    "papermill": {
     "duration": 0.027974,
     "end_time": "2024-05-12T19:15:31.758904",
     "exception": false,
     "start_time": "2024-05-12T19:15:31.730930",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 4. Scatter plot\n",
    "\n",
    "Create a scatterplot to visualize the relationship between `mean_duration` and `fare_amount`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "aacdcb85",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:31.816715Z",
     "iopub.status.busy": "2024-05-12T19:15:31.816331Z",
     "iopub.status.idle": "2024-05-12T19:15:33.334223Z",
     "shell.execute_reply": "2024-05-12T19:15:33.333035Z"
    },
    "papermill": {
     "duration": 1.549843,
     "end_time": "2024-05-12T19:15:33.336704",
     "exception": false,
     "start_time": "2024-05-12T19:15:31.786861",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAdkAAAHfCAYAAAAcHqIfAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOydd5xcVdn4v/dOn9m+2ZJsstlN2SRsKi0QUKSJkCiiUpSiFDUq4EsRFV4QeBUQ4adSREBQlCLSLAlECCAgIQUIJNn0ZHvfnd3Z6e3e3x93Z3Zmd2brbM35fj58yN5yznPOvTPPnOc8RVJVVUUgEAgEAkHKkcdbAIFAIBAIpipCyQoEAoFAMEoIJSsQCAQCwSghlKxAIBAIBKOEULICgUAgEIwSQskKBAKBQDBKCCUrEAgEAsEoIZSsQCAQCASjhFCyAoFAIBCMEkLJCgS9WLBgAQ8++OB4i9GHl19+mQULFlBXVzfeogyZP/zhD5x++uksWrSIc889d7zFEQjGDKFkBUMi8kW/YMECPvzwwz7nVVXllFNOYcGCBXz3u98dBwknP7///e/ZuHHjeIuRMv773//yq1/9iqOPPpq7776b66+/frxFOmI4ePAgDz744KT8YTZVEEpWMCxMJhPr1q3rc3zr1q00NTVhNBrHQaqpwaOPPppQyZ577rns2LGDoqKicZBq+GzevBlZlvnFL37Bl7/8ZU455ZTxFumI4eDBgzz00EPU19ePtyhHLELJCobFKaecwoYNGwiFQnHH161bR3l5OXl5eeMk2cRCURT8fn9K2tLpdJhMJiRJSkl7Y0V7eztmszllP7xUVcXn86WkLYFgtBFKVjAsVq9eTWdnJ++//370WCAQ4N///jdf/OIXE96jKAp/+tOfWL16NUuWLGHVqlXcdtttOByOuOs2btzId77zHU4++WQWL17MGWecwcMPP0w4HI677tJLL2XNmjUcPHiQSy+9lGXLlvGZz3yGxx9/fFBjCAQC3HXXXZxwwgmsWLGCtWvX0tTU1Oe6n/zkJ5x22ml9jj/44IMsWLAg7tiCBQu48847+ec//xkd53vvvQfAE088wUUXXcTKlStZunQpX/nKV9iwYUOf+z0eD6+88krULP+Tn/wESL4n+8wzz7B69WoWL17MySefzB133EFXV1fK5uqll15iwYIFvPjii3HHf//737NgwQLeeeedpPcuWLCAl19+GY/HEx3Pyy+/HG33sssu48QTT2Tx4sWcc845PPvss33aOO200/jud7/Le++9x1e+8hWWLl3KX//6VwC6urr4xS9+wSmnnMLixYs588wzeeyxx1AUZcBxDfU927t3L5dccgnLli3jzDPPjD67rVu3cv7557N06VLOOussNm3a1Kev3bt3c9VVV3H00UezYsUKvvnNb/LJJ5/EXZPofYLEzz0yJx9++CFf+9rXWLJkCaeffjp///vf4+774Q9/CMBll10Wnf8tW7YMODeC1KEfbwEEk5OioiKWL1/O+vXro+a/d999F6fTyTnnnMNf/vKXPvfcdtttvPLKK3zlK1/h0ksvpa6ujmeeeYbdu3fz3HPPYTAYAHjllVewWq1cfvnlWK1WNm/ezAMPPIDL5eLHP/5xXJsOh4OrrrqKM888k7PPPpt///vf3HfffZSVlQ1olrzlllv45z//yZo1azj66KPZvHkz3/nOd0Y8N5s3b+a1117j4osvJjs7O2re/fOf/8xpp53GF7/4RYLBIOvXr+eHP/whjz76KJ/73OcAuPfee/nf//1fli5dygUXXABAcXFx0r4efPBBHnroIVatWsXXv/51Kisree6559i5c2fcnMLw5+qrX/0qb7zxBvfccw8nnXQS06dPZ9++fTz00EN87Wtf6/fee++9l7/97W/s2LGDn//85wAcffTRADz33HPMnz+f0047Db1ez9tvv80dd9yBqqpcfPHFce1UVlZyww03cOGFF3LBBRdQWlqK1+vlkksuobm5mYsuuojp06ezfft2/t//+3+0trZyyy239POUhv6erV27lnPOOYcvfOELPPfcc1x//fUoisJdd93FRRddxJo1a3jiiSe49tpr+c9//kNaWhoABw4c4OKLL8Zms3HVVVeh1+t5/vnnufTSS3n66adZtmxZv3Imo7q6mh/+8Id87Wtf47zzzuOll17iJz/5CeXl5cyfP5/jjjuOSy+9lL/85S+sXbuWOXPmADB37txh9ScYJqpAMAReeukltaysTN2xY4f69NNPqytWrFC9Xq+qqqp67bXXqpdeeqmqqqp66qmnqt/5znei923btk0tKytT//nPf8a19+677/Y5HmkvlltvvVVdtmyZ6vf7o8cuueQStaysTH3llVeix/x+v3rSSSep11xzTb/j2LNnj1pWVqbefvvtccevv/56taysTH3ggQeix3784x+rp556ap82HnjgAbWsrCzuWFlZmbpw4UL1wIEDfa7vPa5AIKCuWbNGveyyy+KOL1++XP3xj3/c5/7I3NfW1qqqqqrt7e1qeXm5esUVV6jhcDh63dNPP62WlZWpL774YvTYSOZKVVW1paVFPf7449XLL79c9fv96pe//GX1c5/7nOp0Oge898c//rG6fPnyPscTPecrrrhCPf300+OOnXrqqWpZWZn67rvvxh1/+OGH1eXLl6uVlZVxx++77z510aJFakNDQ79yDfU9+9e//hU9dujQoeiz/uSTT6LH33vvPbWsrEx96aWXose+//3vq+Xl5WpNTU30WHNzs7pixQr14osvjh5L9D6pat/nrqo9c7Jt27bosfb2dnXx4sXqPffcEz322muvqWVlZermzZv7nQvB6CHMxYJhc/bZZ+P3+3n77bdxuVz85z//SWoq3rBhA+np6Zx00knY7fbof+Xl5Vit1jgTltlsjv7b5XJht9s59thj8Xq9HD58OK5dq9UaFxJiNBpZsmQJtbW1/coeMXFeeumlcce/+c1vDm7w/XDccccxb968Psdjx+VwOHA6nRxzzDHs3r17WP1s2rSJYDDIZZddhiz3fJTPP/980tLS+phxhztXAHl5edx22228//77XHzxxezZs4e77rorulobDrHz4XQ6sdvtHH/88dTW1uJ0OuOunTlzJp/5zGfijm3YsIFjjjmGjIyMuHdq1apVhMNhtm3bNuj+B/OerV69Ovr3nDlzyMjIYO7cuXEr0ci/I3MaDod5//33OeOMM5g1a1b0uvz8fNasWcNHH32Ey+XqV85kzJs3j2OPPTb6d05ODqWlpYN6noKxQ5iLBcMmJyeHE088kXXr1uHz+QiHw5x11lkJr62ursbpdHLiiScmPN/e3h7994EDB/jNb37D5s2b+3wB9f7yLSws7OMIlJmZyb59+/qVvb6+HlmW+5hiIya1kTBz5syEx99++20eeeQR9uzZQyAQiB4friNTQ0MD0Fdmo9HIrFmz+niUDneuIqxevZp//vOf/Oc//+HCCy9M+iwHy0cffcSDDz7IJ598gtfrjTvndDpJT0+P/p1oTqurq9m3b19SOex2e7/9j/Q9S09Pp7CwsM8xILonbrfb8Xq9lJaW9ul/7ty5KIpCY2Mj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Xr3uBmWQjYmJweFwtCtvaGggNrb7K71MmzatN6olSZIkSREGZV/M6NGj2z17dTgc1NTUMHr06H6qlSRJkiRFGpRBdv78+Wzbto3GxmOLgG/atAlVVZk3b14/1kySJEmSjhmUA58aGhpYunQpWVlZXHvtteFkFOeff37vJKOQJEmSpF4wKIMshNIq3nfffXz55ZfYbDaWLVvGTTfdNGQfxkuSJEmDz6ANspIkSZI00A3KZ7KSJEmSNBjIICtJkiRJfUQGWUmSJEnqIzLISpIkSVIfkUFWkiRJkvqIDLKSJEmS1EdkkJUkSZKkPvKdD7IHDx7kxz/+MVOnTmXevHmsXbsWn8/X39XqtpKSEu6++26WLVvGxIkTyc/P73C71157je9973tMmjSJCy64gI8++ugU17T73nvvPa677jrmz5/P1KlTWbZsGa+//jptp3gPxrZt3bqVH/3oR8yePZu8vDzOPvtsHnjggXYLYGzZsoULLriASZMm8b3vfY/169f3U417zul0Mn/+fHJycvjqq68i3huM5+6NN94gJyen3T8PPvhgxHaDsW0tNmzYwIUXXsikSZOYNWsW11xzDR6PJ/z+YL0ur7zyyg7PXU5ODu+++254u944d4NyFZ7e0tDQwFVXXUVmZibr1q0Lp2f0eDyDLj1jYWEhW7duZcqUKWia1i4AAbz77rvcddddrFixgtmzZ7Nx40auv/56XnrpJaZOnXrqK91Fzz33HCNGjGDlypXEx8ezbds27rrrLiorK7n++uuBwds2u93O5MmTufLKK4mLi6OwsJB169ZRWFjIM888A8Dnn3/O9ddfzyWXXMLtt9/O9u3bueOOO7DZbJx33nn93IKue/TRRwkGg+3KB+u5a/HUU08RHR0dfp2SkhL+82Bu22OPPcaTTz7JihUrmDp1KvX19Xz66afhcziYr8tVq1bR1NQUUfb888/zj3/8gzlz5gC9eO7Ed9if//xnMXXqVFFfXx8u++tf/yomTJggKisr+69iPRAMBsN/vu2228TSpUvbbXPuueeKm2++OaLssssuE9dcc02f1+9k1NbWtiu78847xfTp08PtHqxt68irr74qsrOzw9fg1VdfLS677LKIbW6++WaxePHi/qhejxw4cEBMnTpVvPLKKyI7O1vs2bMn/N5gPXfr168X2dnZHV6fLQZr2w4ePCgmTpwo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NGA8/vjjHQbZZcuWsWfPHkaMGNEPtZKknpNBVpKkPqFpGl6vt1f2pdPpMJlMKIrSK/uTpFNFBllJ6sS6devIycmhuLiYW2+9lRkzZjB79mweeughhBAcOXKE6667junTpzNv3jyeeeaZiM/7fD4efvhhzjnnHPLy8jjrrLNYu3YtPp8vYrv169ezfPly5syZQ15eHkuWLOHll19uV5+FCxdy7bXX8vnnn3PJJZcwadIkzj77bN58881ut83n83H//fcze/Zspk2bxooVK6isrGy33cqVK1m4cGGn301rOTk53Hvvvbz11lssXbqUSZMm8a9//QuAp59+mssvv5xZs2YxefJkvv/977dbRiwnJweXy8WGDRvIyckhJyeHlStXAp0/k33ppZdYunQpeXl5nHHGGaxevTpi6UqAK6+8kvz8fA4cOMCVV17JlClTOPPMM3nyySe7/b1JUnd9p5e6k6SuuOmmmxgzZgy33HILW7du5bHHHiMuLo6//vWvzJ49m1tvvZW3336b3/72t0yaNImZM2eiaRrXXXcdu3bt4gc/+AFjxoyhoKCA559/nkOHDvHoo4+G9//KK68wbtw4Fi5ciF6v56OPPmL16tUIIfjP//zPiLqUlJRw4403cskll3DRRRexfv16Vq5cSW5uLuPGjetym+644w7eeust8vPzmT59Otu3b+enP/3pSX9X27dv57333uM///M/iY+PD3fvvvDCCyxcuJDzzz8fv9/Pu+++y4033sjjjz/Of/zHfwCwdu1a7rzzTiZPnswPfvADADIyMjo91rp163jkkUeYO3cuV1xxBcXFxbzyyit89dVXvPLKKxGLcDc0NHDNNddwzjnnsHjxYt5//30efPBBsrOzOeuss0663ZLUqZ4uEyRJQ93DDz8ssrOzxV133RUuCwQCYv78+SInJ0c8/vjj4fKGhgYxefJkcdtttwkhhHjzzTfF+PHjxc6dOyP2+corr4js7Gyxa9eucJnb7W537KuvvlqcffbZEWUtS/613mdtba3Iy8sTa9as6XK7vv32W5GdnS3uueeeiPKbb75ZZGdni4cffjhcdtttt4kFCxa020fLd9Nadna2GD9+fLvl0IRo30afzyfy8/PF8uXLI8qnTp0a/g5bW79+fcTShrW1tSI3N1dcffXVIhgMhrd78cUXRXZ2tnj99dfDZT/60Y9Edna22LBhQ7jM6/WKefPmiRtuuKHdsSSpN8nuYkk6gUsuuST8Z51OR15eHkKIiPKYmBiysrIoKysDYNOmTYwZM4bRo0dTV1cX/mf27NkA7NixI/xZs9kc/rPD4aCuro7TTz+dsrIyHA5HRF3Gjh3LaaedFn6dkJAQcdyu2Lp1KxDqRm3tqquu6vI+OjNz5kzGjh3brrx1GxsaGnA4HMyYMYNvvvmmR8fZtm0bfr+f5cuXo6rH/hq79NJLiYqKCrexhdVqZdmyZeHXRqORSZMmdet7k6SekN3FknQCw4cPj3gdHR2NyWQiISGhXbndbgdC3boHDx5kzpw5He6ztrY2/Oddu3axbt06/v3vf+N2uyO2czgcREdHh1+npaW121dsbCwNDQ1dbk9FRQWqqrbrih09enSX99GZ9PT0Dss/+ugjHnvsMb799tuIZ9I9Hch0+PBhoH2djUYjI0eOpKKiIqI8NTW13bFiY2PZv39/j44vSV0lg6wknUDrO6UWOp2uw22FEEBoZG12dja/+tWvOtwuNTUVgNLSUv7rv/6L0aNHs3LlStLS0jAYDGzdupXnnnsOTdO6dNy+0lkQDAaDHZa3vmNt8fnnn3Pdddcxc+ZMVq1aRVJSEgaDgfXr1/POO+/0an07c6q/N0lqIYOsJPWBjIwM9u3bx5w5c457t7ZlyxZ8Ph+PPfZYxB1z6+7k3jZixAg0TaO0tDTiTrCoqKjdtjExMe1G68KxO8mueP/99zGZTDz99NMYjcZw+fr167tZ82NavquioiJGjhwZLvf5fJSXlzN37twe71uSepN8JitJfWDx4sVUVVXxt7/9rd17Ho8Hl8sFHLvDarkDhlAX8ckEoBOZP38+AH/5y18iyp9//vl222ZkZOBwONi3b1+4rLq6mg8++KDLx9PpdCiKEnH3W15ezocffthuW6vV2mFQb2vu3LkYDAb+8pe/RHx3r7/+Og6HQ44YlgYMeScrSX1g2bJlvPfee6xatYodO3Ywffp0gsEgRUVFbNq0iaeeeopJkyYxb948DAYDK1as4PLLL8fpdPLaa6+RmJhITU1Nn9RtwoQJ5Ofn8/LLL+NwOJg2bRrbt2+npKSk3bZLlizhwQcf5Prrr+fKK6/E4/HwyiuvkJWVxd69e7t0vLPOOotnn32Wa665hvz8fGpra3n55ZfJyMho90w0NzeXTz/9lGeffZbk5GTS09OZMmVKu30mJCRw7bXX8sgjj3DNNdewcOFCiouLefnll5k0aRIXXHBBz74cSeplMshKUh9QVZU//elPPPfcc/z973/ngw8+wGKxkJ6ezpVXXklWVhYQGrjz8MMP89BDD/Hb3/6WYcOGccUVV5CQkMDtt9/eZ/W7//77iY+P5+233+bDDz9k1qxZPPHEE+3uAOPj43nkkUdYs2YNv/vd70hPT+fmm2+mpKSky0F2zpw5/OY3v+HJJ5/k/vvvJz09nVtvvZWKiop2QXblypXcfffdPPTQQ3g8Hi666KIOgyzADTfcQEJCAi+++CIPPPAAsbGx/OAHP+Dmm2+OmCMrSf1JEa37WiRJkiRJ6jXymawkSZIk9RHZXSxJQ8iJnuOazeaIebeSJPUt2V0sSUNI26T9bV100UWsWbPmFNVGkiQZZCVpCNm2bdtx309OTu4w7aEkSX1DBllJkiRJ6iNy4JMkSZIk9REZZCVJkiSpj8ggK0mSJEl9RAZZSZIkSeojMshKkiRJUh+RQVaSJEmS+ogMspIkSZLUR2SQlSRJkqQ+8v8BL972llD/GhUAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create a scatter plot of duration and trip_distance, with a line of best fit\n",
    "sns.set(style='whitegrid')\n",
    "f = plt.figure()\n",
    "f.set_figwidth(5)\n",
    "f.set_figheight(5)\n",
    "sns.regplot(x=df['mean_duration'], y=df['fare_amount'],\n",
    "            scatter_kws={'alpha':0.5, 's':5},\n",
    "            line_kws={'color':'red'})\n",
    "plt.ylim(0, 70)\n",
    "plt.xlim(0, 70)\n",
    "plt.title('Mean duration x fare amount')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a88850f7",
   "metadata": {
    "papermill": {
     "duration": 0.029109,
     "end_time": "2024-05-12T19:15:33.395451",
     "exception": false,
     "start_time": "2024-05-12T19:15:33.366342",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The `mean_duration` variable correlates with the target variable. But what are the horizontal lines around fare amounts of 52 dollars and 63 dollars? What are the values and how many are there?\n",
    "\n",
    "You know what one of the lines represents. 62 dollars and 50 cents is the maximum that was imputed for outliers, so all former outliers will now have fare amounts of \\$62.50. What is the other line?\n",
    "\n",
    "Check the value of the rides in the second horizontal line in the scatter plot."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "bcad4d36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:33.456993Z",
     "iopub.status.busy": "2024-05-12T19:15:33.456598Z",
     "iopub.status.idle": "2024-05-12T19:15:33.469306Z",
     "shell.execute_reply": "2024-05-12T19:15:33.468167Z"
    },
    "papermill": {
     "duration": 0.046428,
     "end_time": "2024-05-12T19:15:33.471552",
     "exception": false,
     "start_time": "2024-05-12T19:15:33.425124",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "fare_amount\n",
       "52.0    514\n",
       "62.5     84\n",
       "59.0      9\n",
       "50.5      9\n",
       "57.5      8\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['fare_amount'] > 50]['fare_amount'].value_counts().head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b08f5ee6",
   "metadata": {
    "papermill": {
     "duration": 0.029325,
     "end_time": "2024-05-12T19:15:33.530480",
     "exception": false,
     "start_time": "2024-05-12T19:15:33.501155",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Exemplar note:** There are 514 trips whose fares were \\$52.\n",
    "\n",
    "Examine the first 30 of these trips."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "a1e4ff19",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:33.592227Z",
     "iopub.status.busy": "2024-05-12T19:15:33.591186Z",
     "iopub.status.idle": "2024-05-12T19:15:33.636904Z",
     "shell.execute_reply": "2024-05-12T19:15:33.635833Z"
    },
    "papermill": {
     "duration": 0.079495,
     "end_time": "2024-05-12T19:15:33.639787",
     "exception": false,
     "start_time": "2024-05-12T19:15:33.560292",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>VendorID</th>\n",
       "      <th>tpep_pickup_datetime</th>\n",
       "      <th>tpep_dropoff_datetime</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>store_and_fwd_flag</th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>DOLocationID</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>extra</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>duration</th>\n",
       "      <th>pickup_dropoff</th>\n",
       "      <th>mean_distance</th>\n",
       "      <th>mean_duration</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>rush_hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>18600059</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-03-05 19:15:30</td>\n",
       "      <td>2017-03-05 19:52:18</td>\n",
       "      <td>2</td>\n",
       "      <td>18.90</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>236</td>\n",
       "      <td>132</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>14.58</td>\n",
       "      <td>5.54</td>\n",
       "      <td>0.3</td>\n",
       "      <td>72.92</td>\n",
       "      <td>36.800000</td>\n",
       "      <td>236 132</td>\n",
       "      <td>19.211667</td>\n",
       "      <td>40.500000</td>\n",
       "      <td>sunday</td>\n",
       "      <td>mar</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>47959795</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-06-03 14:24:57</td>\n",
       "      <td>2017-06-03 15:31:48</td>\n",
       "      <td>1</td>\n",
       "      <td>18.00</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>163</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>52.80</td>\n",
       "      <td>66.850000</td>\n",
       "      <td>132 163</td>\n",
       "      <td>19.229000</td>\n",
       "      <td>52.941667</td>\n",
       "      <td>saturday</td>\n",
       "      <td>jun</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>95729204</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-11-11 20:16:16</td>\n",
       "      <td>2017-11-11 20:17:14</td>\n",
       "      <td>1</td>\n",
       "      <td>0.23</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>132</td>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>52.80</td>\n",
       "      <td>0.966667</td>\n",
       "      <td>132 132</td>\n",
       "      <td>2.255862</td>\n",
       "      <td>3.021839</td>\n",
       "      <td>saturday</td>\n",
       "      <td>nov</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>103404868</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-12-06 23:37:08</td>\n",
       "      <td>2017-12-07 00:06:19</td>\n",
       "      <td>1</td>\n",
       "      <td>18.93</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>79</td>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>52.80</td>\n",
       "      <td>29.183333</td>\n",
       "      <td>132 79</td>\n",
       "      <td>19.431667</td>\n",
       "      <td>47.275000</td>\n",
       "      <td>wednesday</td>\n",
       "      <td>dec</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>80479432</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-09-24 23:45:45</td>\n",
       "      <td>2017-09-25 00:15:14</td>\n",
       "      <td>1</td>\n",
       "      <td>17.99</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>234</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>14.64</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>73.20</td>\n",
       "      <td>29.483333</td>\n",
       "      <td>132 234</td>\n",
       "      <td>17.654000</td>\n",
       "      <td>49.833333</td>\n",
       "      <td>sunday</td>\n",
       "      <td>sep</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>388</th>\n",
       "      <td>16226157</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-02-28 18:30:05</td>\n",
       "      <td>2017-02-28 19:09:55</td>\n",
       "      <td>1</td>\n",
       "      <td>18.40</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>48</td>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.54</td>\n",
       "      <td>0.3</td>\n",
       "      <td>62.84</td>\n",
       "      <td>39.833333</td>\n",
       "      <td>132 48</td>\n",
       "      <td>18.761905</td>\n",
       "      <td>58.246032</td>\n",
       "      <td>tuesday</td>\n",
       "      <td>feb</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>406</th>\n",
       "      <td>55253442</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-06-05 12:51:58</td>\n",
       "      <td>2017-06-05 13:07:35</td>\n",
       "      <td>1</td>\n",
       "      <td>4.73</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>228</td>\n",
       "      <td>88</td>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>58.56</td>\n",
       "      <td>15.616667</td>\n",
       "      <td>228 88</td>\n",
       "      <td>4.730000</td>\n",
       "      <td>15.616667</td>\n",
       "      <td>monday</td>\n",
       "      <td>jun</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>449</th>\n",
       "      <td>65900029</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-08-03 22:47:14</td>\n",
       "      <td>2017-08-03 23:32:41</td>\n",
       "      <td>2</td>\n",
       "      <td>18.21</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>48</td>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>58.56</td>\n",
       "      <td>45.450000</td>\n",
       "      <td>132 48</td>\n",
       "      <td>18.761905</td>\n",
       "      <td>58.246032</td>\n",
       "      <td>thursday</td>\n",
       "      <td>aug</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>468</th>\n",
       "      <td>80904240</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-09-26 13:48:26</td>\n",
       "      <td>2017-09-26 14:31:17</td>\n",
       "      <td>1</td>\n",
       "      <td>17.27</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>186</td>\n",
       "      <td>132</td>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>58.56</td>\n",
       "      <td>42.850000</td>\n",
       "      <td>186 132</td>\n",
       "      <td>17.096000</td>\n",
       "      <td>42.920000</td>\n",
       "      <td>tuesday</td>\n",
       "      <td>sep</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>520</th>\n",
       "      <td>33706214</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-04-23 21:34:48</td>\n",
       "      <td>2017-04-23 22:46:23</td>\n",
       "      <td>6</td>\n",
       "      <td>18.34</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>148</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>5.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>57.80</td>\n",
       "      <td>71.583333</td>\n",
       "      <td>132 148</td>\n",
       "      <td>17.994286</td>\n",
       "      <td>46.340476</td>\n",
       "      <td>sunday</td>\n",
       "      <td>apr</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>569</th>\n",
       "      <td>99259872</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-11-22 21:31:32</td>\n",
       "      <td>2017-11-22 22:00:25</td>\n",
       "      <td>1</td>\n",
       "      <td>18.65</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>144</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>10.56</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>63.36</td>\n",
       "      <td>28.883333</td>\n",
       "      <td>132 144</td>\n",
       "      <td>18.537500</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>wednesday</td>\n",
       "      <td>nov</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>572</th>\n",
       "      <td>61050418</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-07-18 13:29:06</td>\n",
       "      <td>2017-07-18 13:29:19</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>230</td>\n",
       "      <td>161</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>11.71</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>70.27</td>\n",
       "      <td>0.216667</td>\n",
       "      <td>230 161</td>\n",
       "      <td>0.685484</td>\n",
       "      <td>7.965591</td>\n",
       "      <td>tuesday</td>\n",
       "      <td>jul</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>586</th>\n",
       "      <td>54444647</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-06-26 13:39:12</td>\n",
       "      <td>2017-06-26 14:34:54</td>\n",
       "      <td>1</td>\n",
       "      <td>17.76</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>211</td>\n",
       "      <td>132</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>11.71</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>70.27</td>\n",
       "      <td>55.700000</td>\n",
       "      <td>211 132</td>\n",
       "      <td>16.580000</td>\n",
       "      <td>61.691667</td>\n",
       "      <td>monday</td>\n",
       "      <td>jun</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>692</th>\n",
       "      <td>94424289</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-11-07 22:15:00</td>\n",
       "      <td>2017-11-07 22:45:32</td>\n",
       "      <td>2</td>\n",
       "      <td>16.97</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>170</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>11.71</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>70.27</td>\n",
       "      <td>30.533333</td>\n",
       "      <td>132 170</td>\n",
       "      <td>17.203000</td>\n",
       "      <td>37.113333</td>\n",
       "      <td>tuesday</td>\n",
       "      <td>nov</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>717</th>\n",
       "      <td>103094220</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-12-06 05:19:50</td>\n",
       "      <td>2017-12-06 05:53:52</td>\n",
       "      <td>1</td>\n",
       "      <td>20.80</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>239</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>5.85</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>64.41</td>\n",
       "      <td>34.033333</td>\n",
       "      <td>132 239</td>\n",
       "      <td>20.901250</td>\n",
       "      <td>44.862500</td>\n",
       "      <td>wednesday</td>\n",
       "      <td>dec</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>719</th>\n",
       "      <td>66115834</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-08-04 17:53:34</td>\n",
       "      <td>2017-08-04 18:50:56</td>\n",
       "      <td>1</td>\n",
       "      <td>21.60</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>264</td>\n",
       "      <td>264</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>12.60</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>75.66</td>\n",
       "      <td>57.366667</td>\n",
       "      <td>264 264</td>\n",
       "      <td>3.191516</td>\n",
       "      <td>15.618773</td>\n",
       "      <td>friday</td>\n",
       "      <td>aug</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>782</th>\n",
       "      <td>55934137</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-06-09 09:31:25</td>\n",
       "      <td>2017-06-09 10:24:10</td>\n",
       "      <td>2</td>\n",
       "      <td>18.81</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>163</td>\n",
       "      <td>132</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>13.20</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>66.00</td>\n",
       "      <td>52.750000</td>\n",
       "      <td>163 132</td>\n",
       "      <td>17.275833</td>\n",
       "      <td>52.338889</td>\n",
       "      <td>friday</td>\n",
       "      <td>jun</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>816</th>\n",
       "      <td>13731926</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-02-21 06:11:03</td>\n",
       "      <td>2017-02-21 06:59:39</td>\n",
       "      <td>5</td>\n",
       "      <td>16.94</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>170</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>2.00</td>\n",
       "      <td>5.54</td>\n",
       "      <td>0.3</td>\n",
       "      <td>60.34</td>\n",
       "      <td>48.600000</td>\n",
       "      <td>132 170</td>\n",
       "      <td>17.203000</td>\n",
       "      <td>37.113333</td>\n",
       "      <td>tuesday</td>\n",
       "      <td>feb</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>818</th>\n",
       "      <td>52277743</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-06-20 08:15:18</td>\n",
       "      <td>2017-06-20 10:24:37</td>\n",
       "      <td>1</td>\n",
       "      <td>17.77</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>246</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>11.71</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>70.27</td>\n",
       "      <td>88.783333</td>\n",
       "      <td>132 246</td>\n",
       "      <td>18.515000</td>\n",
       "      <td>66.316667</td>\n",
       "      <td>tuesday</td>\n",
       "      <td>jun</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>835</th>\n",
       "      <td>2684305</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-01-10 22:29:47</td>\n",
       "      <td>2017-01-10 23:06:46</td>\n",
       "      <td>1</td>\n",
       "      <td>18.57</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>13.20</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>66.00</td>\n",
       "      <td>36.983333</td>\n",
       "      <td>132 48</td>\n",
       "      <td>18.761905</td>\n",
       "      <td>58.246032</td>\n",
       "      <td>tuesday</td>\n",
       "      <td>jan</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>840</th>\n",
       "      <td>90860814</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-10-27 21:50:00</td>\n",
       "      <td>2017-10-27 22:35:04</td>\n",
       "      <td>1</td>\n",
       "      <td>22.43</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>163</td>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>58.56</td>\n",
       "      <td>45.066667</td>\n",
       "      <td>132 163</td>\n",
       "      <td>19.229000</td>\n",
       "      <td>52.941667</td>\n",
       "      <td>friday</td>\n",
       "      <td>oct</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>861</th>\n",
       "      <td>106575186</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-12-16 06:39:59</td>\n",
       "      <td>2017-12-16 07:07:59</td>\n",
       "      <td>2</td>\n",
       "      <td>17.80</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>75</td>\n",
       "      <td>132</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>6.00</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>64.56</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>75 132</td>\n",
       "      <td>18.442500</td>\n",
       "      <td>36.204167</td>\n",
       "      <td>saturday</td>\n",
       "      <td>dec</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>881</th>\n",
       "      <td>110495611</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-12-30 05:25:29</td>\n",
       "      <td>2017-12-30 06:01:29</td>\n",
       "      <td>6</td>\n",
       "      <td>18.23</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>68</td>\n",
       "      <td>132</td>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>52.80</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>68 132</td>\n",
       "      <td>18.785000</td>\n",
       "      <td>58.041667</td>\n",
       "      <td>saturday</td>\n",
       "      <td>dec</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>958</th>\n",
       "      <td>87017503</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-10-15 22:39:12</td>\n",
       "      <td>2017-10-15 23:14:22</td>\n",
       "      <td>1</td>\n",
       "      <td>21.80</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>261</td>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>52.80</td>\n",
       "      <td>35.166667</td>\n",
       "      <td>132 261</td>\n",
       "      <td>22.115000</td>\n",
       "      <td>51.493750</td>\n",
       "      <td>sunday</td>\n",
       "      <td>oct</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>970</th>\n",
       "      <td>12762608</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-02-17 20:39:42</td>\n",
       "      <td>2017-02-17 21:13:29</td>\n",
       "      <td>1</td>\n",
       "      <td>19.57</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>140</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>11.67</td>\n",
       "      <td>5.54</td>\n",
       "      <td>0.3</td>\n",
       "      <td>70.01</td>\n",
       "      <td>33.783333</td>\n",
       "      <td>132 140</td>\n",
       "      <td>19.293333</td>\n",
       "      <td>36.791667</td>\n",
       "      <td>friday</td>\n",
       "      <td>feb</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>984</th>\n",
       "      <td>71264442</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-08-23 18:23:26</td>\n",
       "      <td>2017-08-23 19:18:29</td>\n",
       "      <td>1</td>\n",
       "      <td>16.70</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>132</td>\n",
       "      <td>230</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>42.29</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>99.59</td>\n",
       "      <td>55.050000</td>\n",
       "      <td>132 230</td>\n",
       "      <td>18.571200</td>\n",
       "      <td>59.598000</td>\n",
       "      <td>wednesday</td>\n",
       "      <td>aug</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1082</th>\n",
       "      <td>11006300</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-02-07 17:20:19</td>\n",
       "      <td>2017-02-07 17:34:41</td>\n",
       "      <td>1</td>\n",
       "      <td>1.09</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>170</td>\n",
       "      <td>48</td>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.54</td>\n",
       "      <td>0.3</td>\n",
       "      <td>62.84</td>\n",
       "      <td>14.366667</td>\n",
       "      <td>170 48</td>\n",
       "      <td>1.265789</td>\n",
       "      <td>14.135965</td>\n",
       "      <td>tuesday</td>\n",
       "      <td>feb</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1097</th>\n",
       "      <td>68882036</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-08-14 23:01:15</td>\n",
       "      <td>2017-08-14 23:03:35</td>\n",
       "      <td>5</td>\n",
       "      <td>2.12</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>265</td>\n",
       "      <td>265</td>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>52.80</td>\n",
       "      <td>2.333333</td>\n",
       "      <td>265 265</td>\n",
       "      <td>0.753077</td>\n",
       "      <td>3.411538</td>\n",
       "      <td>monday</td>\n",
       "      <td>aug</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1110</th>\n",
       "      <td>74720333</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-09-06 10:46:17</td>\n",
       "      <td>2017-09-06 11:44:41</td>\n",
       "      <td>1</td>\n",
       "      <td>19.10</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>239</td>\n",
       "      <td>132</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>15.80</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.3</td>\n",
       "      <td>68.60</td>\n",
       "      <td>58.400000</td>\n",
       "      <td>239 132</td>\n",
       "      <td>19.795000</td>\n",
       "      <td>50.562500</td>\n",
       "      <td>wednesday</td>\n",
       "      <td>sep</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1179</th>\n",
       "      <td>51937907</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-06-19 06:23:13</td>\n",
       "      <td>2017-06-19 07:03:53</td>\n",
       "      <td>6</td>\n",
       "      <td>19.77</td>\n",
       "      <td>2</td>\n",
       "      <td>N</td>\n",
       "      <td>238</td>\n",
       "      <td>132</td>\n",
       "      <td>1</td>\n",
       "      <td>52.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>17.57</td>\n",
       "      <td>5.76</td>\n",
       "      <td>0.3</td>\n",
       "      <td>76.13</td>\n",
       "      <td>40.666667</td>\n",
       "      <td>238 132</td>\n",
       "      <td>19.470000</td>\n",
       "      <td>53.861111</td>\n",
       "      <td>monday</td>\n",
       "      <td>jun</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Unnamed: 0  VendorID tpep_pickup_datetime tpep_dropoff_datetime  \\\n",
       "11      18600059         2  2017-03-05 19:15:30   2017-03-05 19:52:18   \n",
       "110     47959795         1  2017-06-03 14:24:57   2017-06-03 15:31:48   \n",
       "161     95729204         2  2017-11-11 20:16:16   2017-11-11 20:17:14   \n",
       "247    103404868         2  2017-12-06 23:37:08   2017-12-07 00:06:19   \n",
       "379     80479432         2  2017-09-24 23:45:45   2017-09-25 00:15:14   \n",
       "388     16226157         1  2017-02-28 18:30:05   2017-02-28 19:09:55   \n",
       "406     55253442         2  2017-06-05 12:51:58   2017-06-05 13:07:35   \n",
       "449     65900029         2  2017-08-03 22:47:14   2017-08-03 23:32:41   \n",
       "468     80904240         2  2017-09-26 13:48:26   2017-09-26 14:31:17   \n",
       "520     33706214         2  2017-04-23 21:34:48   2017-04-23 22:46:23   \n",
       "569     99259872         2  2017-11-22 21:31:32   2017-11-22 22:00:25   \n",
       "572     61050418         2  2017-07-18 13:29:06   2017-07-18 13:29:19   \n",
       "586     54444647         2  2017-06-26 13:39:12   2017-06-26 14:34:54   \n",
       "692     94424289         2  2017-11-07 22:15:00   2017-11-07 22:45:32   \n",
       "717    103094220         1  2017-12-06 05:19:50   2017-12-06 05:53:52   \n",
       "719     66115834         1  2017-08-04 17:53:34   2017-08-04 18:50:56   \n",
       "782     55934137         2  2017-06-09 09:31:25   2017-06-09 10:24:10   \n",
       "816     13731926         2  2017-02-21 06:11:03   2017-02-21 06:59:39   \n",
       "818     52277743         2  2017-06-20 08:15:18   2017-06-20 10:24:37   \n",
       "835      2684305         2  2017-01-10 22:29:47   2017-01-10 23:06:46   \n",
       "840     90860814         2  2017-10-27 21:50:00   2017-10-27 22:35:04   \n",
       "861    106575186         1  2017-12-16 06:39:59   2017-12-16 07:07:59   \n",
       "881    110495611         2  2017-12-30 05:25:29   2017-12-30 06:01:29   \n",
       "958     87017503         1  2017-10-15 22:39:12   2017-10-15 23:14:22   \n",
       "970     12762608         2  2017-02-17 20:39:42   2017-02-17 21:13:29   \n",
       "984     71264442         1  2017-08-23 18:23:26   2017-08-23 19:18:29   \n",
       "1082    11006300         2  2017-02-07 17:20:19   2017-02-07 17:34:41   \n",
       "1097    68882036         2  2017-08-14 23:01:15   2017-08-14 23:03:35   \n",
       "1110    74720333         1  2017-09-06 10:46:17   2017-09-06 11:44:41   \n",
       "1179    51937907         2  2017-06-19 06:23:13   2017-06-19 07:03:53   \n",
       "\n",
       "      passenger_count  trip_distance  RatecodeID store_and_fwd_flag  \\\n",
       "11                  2          18.90           2                  N   \n",
       "110                 1          18.00           2                  N   \n",
       "161                 1           0.23           2                  N   \n",
       "247                 1          18.93           2                  N   \n",
       "379                 1          17.99           2                  N   \n",
       "388                 1          18.40           2                  N   \n",
       "406                 1           4.73           2                  N   \n",
       "449                 2          18.21           2                  N   \n",
       "468                 1          17.27           2                  N   \n",
       "520                 6          18.34           2                  N   \n",
       "569                 1          18.65           2                  N   \n",
       "572                 1           0.00           2                  N   \n",
       "586                 1          17.76           2                  N   \n",
       "692                 2          16.97           2                  N   \n",
       "717                 1          20.80           2                  N   \n",
       "719                 1          21.60           2                  N   \n",
       "782                 2          18.81           2                  N   \n",
       "816                 5          16.94           2                  N   \n",
       "818                 1          17.77           2                  N   \n",
       "835                 1          18.57           2                  N   \n",
       "840                 1          22.43           2                  N   \n",
       "861                 2          17.80           2                  N   \n",
       "881                 6          18.23           2                  N   \n",
       "958                 1          21.80           2                  N   \n",
       "970                 1          19.57           2                  N   \n",
       "984                 1          16.70           2                  N   \n",
       "1082                1           1.09           2                  N   \n",
       "1097                5           2.12           2                  N   \n",
       "1110                1          19.10           2                  N   \n",
       "1179                6          19.77           2                  N   \n",
       "\n",
       "      PULocationID  DOLocationID  payment_type  fare_amount  extra  mta_tax  \\\n",
       "11             236           132             1         52.0    0.0      0.5   \n",
       "110            132           163             1         52.0    0.0      0.5   \n",
       "161            132           132             2         52.0    0.0      0.5   \n",
       "247            132            79             2         52.0    0.0      0.5   \n",
       "379            132           234             1         52.0    0.0      0.5   \n",
       "388            132            48             2         52.0    4.5      0.5   \n",
       "406            228            88             2         52.0    0.0      0.5   \n",
       "449            132            48             2         52.0    0.0      0.5   \n",
       "468            186           132             2         52.0    0.0      0.5   \n",
       "520            132           148             1         52.0    0.0      0.5   \n",
       "569            132           144             1         52.0    0.0      0.5   \n",
       "572            230           161             1         52.0    0.0      0.5   \n",
       "586            211           132             1         52.0    0.0      0.5   \n",
       "692            132           170             1         52.0    0.0      0.5   \n",
       "717            132           239             1         52.0    0.0      0.5   \n",
       "719            264           264             1         52.0    4.5      0.5   \n",
       "782            163           132             1         52.0    0.0      0.5   \n",
       "816            132           170             1         52.0    0.0      0.5   \n",
       "818            132           246             1         52.0    0.0      0.5   \n",
       "835            132            48             1         52.0    0.0      0.5   \n",
       "840            132           163             2         52.0    0.0      0.5   \n",
       "861             75           132             1         52.0    0.0      0.5   \n",
       "881             68           132             2         52.0    0.0      0.5   \n",
       "958            132           261             2         52.0    0.0      0.5   \n",
       "970            132           140             1         52.0    0.0      0.5   \n",
       "984            132           230             1         52.0    4.5      0.5   \n",
       "1082           170            48             2         52.0    4.5      0.5   \n",
       "1097           265           265             2         52.0    0.0      0.5   \n",
       "1110           239           132             1         52.0    0.0      0.5   \n",
       "1179           238           132             1         52.0    0.0      0.5   \n",
       "\n",
       "      tip_amount  tolls_amount  improvement_surcharge  total_amount  \\\n",
       "11         14.58          5.54                    0.3         72.92   \n",
       "110         0.00          0.00                    0.3         52.80   \n",
       "161         0.00          0.00                    0.3         52.80   \n",
       "247         0.00          0.00                    0.3         52.80   \n",
       "379        14.64          5.76                    0.3         73.20   \n",
       "388         0.00          5.54                    0.3         62.84   \n",
       "406         0.00          5.76                    0.3         58.56   \n",
       "449         0.00          5.76                    0.3         58.56   \n",
       "468         0.00          5.76                    0.3         58.56   \n",
       "520         5.00          0.00                    0.3         57.80   \n",
       "569        10.56          0.00                    0.3         63.36   \n",
       "572        11.71          5.76                    0.3         70.27   \n",
       "586        11.71          5.76                    0.3         70.27   \n",
       "692        11.71          5.76                    0.3         70.27   \n",
       "717         5.85          5.76                    0.3         64.41   \n",
       "719        12.60          5.76                    0.3         75.66   \n",
       "782        13.20          0.00                    0.3         66.00   \n",
       "816         2.00          5.54                    0.3         60.34   \n",
       "818        11.71          5.76                    0.3         70.27   \n",
       "835        13.20          0.00                    0.3         66.00   \n",
       "840         0.00          5.76                    0.3         58.56   \n",
       "861         6.00          5.76                    0.3         64.56   \n",
       "881         0.00          0.00                    0.3         52.80   \n",
       "958         0.00          0.00                    0.3         52.80   \n",
       "970        11.67          5.54                    0.3         70.01   \n",
       "984        42.29          0.00                    0.3         99.59   \n",
       "1082        0.00          5.54                    0.3         62.84   \n",
       "1097        0.00          0.00                    0.3         52.80   \n",
       "1110       15.80          0.00                    0.3         68.60   \n",
       "1179       17.57          5.76                    0.3         76.13   \n",
       "\n",
       "       duration pickup_dropoff  mean_distance  mean_duration        day month  \\\n",
       "11    36.800000        236 132      19.211667      40.500000     sunday   mar   \n",
       "110   66.850000        132 163      19.229000      52.941667   saturday   jun   \n",
       "161    0.966667        132 132       2.255862       3.021839   saturday   nov   \n",
       "247   29.183333         132 79      19.431667      47.275000  wednesday   dec   \n",
       "379   29.483333        132 234      17.654000      49.833333     sunday   sep   \n",
       "388   39.833333         132 48      18.761905      58.246032    tuesday   feb   \n",
       "406   15.616667         228 88       4.730000      15.616667     monday   jun   \n",
       "449   45.450000         132 48      18.761905      58.246032   thursday   aug   \n",
       "468   42.850000        186 132      17.096000      42.920000    tuesday   sep   \n",
       "520   71.583333        132 148      17.994286      46.340476     sunday   apr   \n",
       "569   28.883333        132 144      18.537500      37.000000  wednesday   nov   \n",
       "572    0.216667        230 161       0.685484       7.965591    tuesday   jul   \n",
       "586   55.700000        211 132      16.580000      61.691667     monday   jun   \n",
       "692   30.533333        132 170      17.203000      37.113333    tuesday   nov   \n",
       "717   34.033333        132 239      20.901250      44.862500  wednesday   dec   \n",
       "719   57.366667        264 264       3.191516      15.618773     friday   aug   \n",
       "782   52.750000        163 132      17.275833      52.338889     friday   jun   \n",
       "816   48.600000        132 170      17.203000      37.113333    tuesday   feb   \n",
       "818   88.783333        132 246      18.515000      66.316667    tuesday   jun   \n",
       "835   36.983333         132 48      18.761905      58.246032    tuesday   jan   \n",
       "840   45.066667        132 163      19.229000      52.941667     friday   oct   \n",
       "861   28.000000         75 132      18.442500      36.204167   saturday   dec   \n",
       "881   36.000000         68 132      18.785000      58.041667   saturday   dec   \n",
       "958   35.166667        132 261      22.115000      51.493750     sunday   oct   \n",
       "970   33.783333        132 140      19.293333      36.791667     friday   feb   \n",
       "984   55.050000        132 230      18.571200      59.598000  wednesday   aug   \n",
       "1082  14.366667         170 48       1.265789      14.135965    tuesday   feb   \n",
       "1097   2.333333        265 265       0.753077       3.411538     monday   aug   \n",
       "1110  58.400000        239 132      19.795000      50.562500  wednesday   sep   \n",
       "1179  40.666667        238 132      19.470000      53.861111     monday   jun   \n",
       "\n",
       "      rush_hour  \n",
       "11            0  \n",
       "110           0  \n",
       "161           0  \n",
       "247           0  \n",
       "379           0  \n",
       "388           1  \n",
       "406           0  \n",
       "449           0  \n",
       "468           0  \n",
       "520           0  \n",
       "569           0  \n",
       "572           0  \n",
       "586           0  \n",
       "692           0  \n",
       "717           0  \n",
       "719           1  \n",
       "782           1  \n",
       "816           1  \n",
       "818           1  \n",
       "835           0  \n",
       "840           0  \n",
       "861           0  \n",
       "881           0  \n",
       "958           0  \n",
       "970           0  \n",
       "984           1  \n",
       "1082          1  \n",
       "1097          0  \n",
       "1110          0  \n",
       "1179          1  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Set pandas to display all columns\n",
    "pd.set_option('display.max_columns', None)\n",
    "df[df['fare_amount']==52].head(30)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "89a9272a",
   "metadata": {
    "papermill": {
     "duration": 0.030616,
     "end_time": "2024-05-12T19:15:33.701522",
     "exception": false,
     "start_time": "2024-05-12T19:15:33.670906",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "It seems that almost all of the trips in the first 30 rows where the fare amount was \\$52 either begin or end at location 132, and all of them have a `RatecodeID` of 2.\n",
    "\n",
    "There is no readily apparent reason why PULocation 132 should have so many fares of 52 dollars. They seem to occur on all different days, at different times, with both vendors, in all months. However, there are many toll amounts of $5.76 and \\\\$5.54. This would seem to indicate that location 132 is in an area that frequently requires tolls to get to and from. It's likely this is an airport.\n",
    "\n",
    "\n",
    "The data dictionary says that `RatecodeID` of 2 indicates trips for JFK, which is John F. Kennedy International Airport. A quick Google search for \"new york city taxi flat rate \\$52\" indicates that in 2017 (the year that this data was collected) there was indeed a flat fare for taxi trips between JFK airport (in Queens) and Manhattan.\n",
    "\n",
    "Because `RatecodeID` is known from the data dictionary, the values for this rate code can be imputed back into the data after the model makes its predictions. This way you know that those data points will always be correct."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d8176037",
   "metadata": {
    "papermill": {
     "duration": 0.030961,
     "end_time": "2024-05-12T19:15:33.763846",
     "exception": false,
     "start_time": "2024-05-12T19:15:33.732885",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 5. Isolate modeling variables\n",
    "\n",
    "Drop features that are redundant, irrelevant, or that will not be available in a deployed environment."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "3c838d7a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:33.828139Z",
     "iopub.status.busy": "2024-05-12T19:15:33.827193Z",
     "iopub.status.idle": "2024-05-12T19:15:33.845323Z",
     "shell.execute_reply": "2024-05-12T19:15:33.844050Z"
    },
    "papermill": {
     "duration": 0.052855,
     "end_time": "2024-05-12T19:15:33.847703",
     "exception": false,
     "start_time": "2024-05-12T19:15:33.794848",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 22699 entries, 0 to 22698\n",
      "Data columns (total 25 columns):\n",
      " #   Column                 Non-Null Count  Dtype         \n",
      "---  ------                 --------------  -----         \n",
      " 0   Unnamed: 0             22699 non-null  int64         \n",
      " 1   VendorID               22699 non-null  int64         \n",
      " 2   tpep_pickup_datetime   22699 non-null  datetime64[ns]\n",
      " 3   tpep_dropoff_datetime  22699 non-null  datetime64[ns]\n",
      " 4   passenger_count        22699 non-null  int64         \n",
      " 5   trip_distance          22699 non-null  float64       \n",
      " 6   RatecodeID             22699 non-null  int64         \n",
      " 7   store_and_fwd_flag     22699 non-null  object        \n",
      " 8   PULocationID           22699 non-null  int64         \n",
      " 9   DOLocationID           22699 non-null  int64         \n",
      " 10  payment_type           22699 non-null  int64         \n",
      " 11  fare_amount            22699 non-null  float64       \n",
      " 12  extra                  22699 non-null  float64       \n",
      " 13  mta_tax                22699 non-null  float64       \n",
      " 14  tip_amount             22699 non-null  float64       \n",
      " 15  tolls_amount           22699 non-null  float64       \n",
      " 16  improvement_surcharge  22699 non-null  float64       \n",
      " 17  total_amount           22699 non-null  float64       \n",
      " 18  duration               22699 non-null  float64       \n",
      " 19  pickup_dropoff         22699 non-null  object        \n",
      " 20  mean_distance          22699 non-null  float64       \n",
      " 21  mean_duration          22699 non-null  float64       \n",
      " 22  day                    22699 non-null  object        \n",
      " 23  month                  22699 non-null  object        \n",
      " 24  rush_hour              22699 non-null  int64         \n",
      "dtypes: datetime64[ns](2), float64(11), int64(8), object(4)\n",
      "memory usage: 4.3+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "3c9a5e2d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:33.911232Z",
     "iopub.status.busy": "2024-05-12T19:15:33.910836Z",
     "iopub.status.idle": "2024-05-12T19:15:33.934906Z",
     "shell.execute_reply": "2024-05-12T19:15:33.933695Z"
    },
    "papermill": {
     "duration": 0.058534,
     "end_time": "2024-05-12T19:15:33.937204",
     "exception": false,
     "start_time": "2024-05-12T19:15:33.878670",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 22699 entries, 0 to 22698\n",
      "Data columns (total 6 columns):\n",
      " #   Column           Non-Null Count  Dtype  \n",
      "---  ------           --------------  -----  \n",
      " 0   VendorID         22699 non-null  int64  \n",
      " 1   passenger_count  22699 non-null  int64  \n",
      " 2   fare_amount      22699 non-null  float64\n",
      " 3   mean_distance    22699 non-null  float64\n",
      " 4   mean_duration    22699 non-null  float64\n",
      " 5   rush_hour        22699 non-null  int64  \n",
      "dtypes: float64(3), int64(3)\n",
      "memory usage: 1.0 MB\n"
     ]
    }
   ],
   "source": [
    "df2 = df.copy()\n",
    "\n",
    "df2 = df2.drop(['Unnamed: 0', 'tpep_dropoff_datetime', 'tpep_pickup_datetime',\n",
    "               'trip_distance', 'RatecodeID', 'store_and_fwd_flag', 'PULocationID', 'DOLocationID',\n",
    "               'payment_type', 'extra', 'mta_tax', 'tip_amount', 'tolls_amount', 'improvement_surcharge',\n",
    "               'total_amount', 'tpep_dropoff_datetime', 'tpep_pickup_datetime', 'duration',\n",
    "               'pickup_dropoff', 'day', 'month'\n",
    "               ], axis=1)\n",
    "\n",
    "df2.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84b0caa8",
   "metadata": {
    "papermill": {
     "duration": 0.030215,
     "end_time": "2024-05-12T19:15:33.998401",
     "exception": false,
     "start_time": "2024-05-12T19:15:33.968186",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 6. Pair plot\n",
    "\n",
    "Create a pairplot to visualize pairwise relationships between `fare_amount`, `mean_duration`, and `mean_distance`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "0a9a7fdc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:34.061711Z",
     "iopub.status.busy": "2024-05-12T19:15:34.061325Z",
     "iopub.status.idle": "2024-05-12T19:15:43.038300Z",
     "shell.execute_reply": "2024-05-12T19:15:43.036973Z"
    },
    "papermill": {
     "duration": 9.014503,
     "end_time": "2024-05-12T19:15:43.043495",
     "exception": false,
     "start_time": "2024-05-12T19:15:34.028992",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n",
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "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WNi6detBcf4aKhGI78ZRRx3FW2+9lbuKAmNgnyzLLFy4cARbNrwUReHKK69k48aNPPjggwNqAANUVFRQVVXFyy+/PGD58uXLWbBgAVar9UA2d9hMnjyZxx57bMC/a6+9FoAbb7yR66+/fsxu+7HHHksoFGLNmjW5Zb29vXz66adMnToVq9XKvHnz+Nvf/jbg95YvX051dfUBqZM8Vvrf7vrXjiQSCf75z3/S0NBwAFo4vJYvX47JZGLKlCljov/84x//IJFIDKlaymj+3rY1VvrenhoLx+uhej5fuXIl2WyW8vLyg+L8NVQiR3w3lixZwuOPP86ll17KxRdfTHt7O7feeitLliwZ0sl0tLjxxht5/fXXWbp0KbFYjI8//jj32pQpU7BarVx++eVcc801VFZWMm/ePJYvX86qVat44oknRq7h+8jr9TJv3rwdvjZ16lSmTp0KMCa3/fjjj6ehoYEf/OAHXHXVVdhsNu6//36sVitnn302AN///vc577zzuOGGG1i8eDHvvvsuL774Iv/zP/9zQNo4Vvrf7vrXqlWrePDBBznhhBMoKyujo6ODhx9+mM7OTu64446Ra/gQXHDBBcybN4+6ujoAXnvtNZ5++mnOO+88CgoKgNHff1544QVKS0uZPXv2gOUffPDBqP3edmes9L3tJZNJ3njjDcBITYzFYrmAdO7cuQSDwVF/vB4K5/PLLruM+vp66urqsNvtrF27loceeoi6ujqOP/54YOTPX0Ml6foOppUSBtiwYQO/+MUv+Oijj3C5XJx22mlcddVVo/aqcUcWLVpEc3PzDl977bXXclePf/zjH3nggQdoaWlh/PjxXH311Rx77LEHsqn73bvvvst5553Hn/70pwF3tcbitvf09PDLX/6S119/nWw2y2GHHca11147IG3ltdde4/bbb2fTpk2UlpZy0UUXccYZZxywNo6F/re7/qWqKj//+c/5/PPPCYVCOBwOZs6cyWWXXca0adMOcGv3zE033cS///1v2tra0DSNqqoqvvWtb3HuueciSVJuvdHaf8LhMAsXLuQ73/kO//Vf/zXgtS1btoza720oxkLf215TU9Og8pP9HnvssdyNmdF6vMKhcT6///77Wb58OVu3bkXXdcrKyjjhhBO44IILBlQ/G+nz11CIQFwQBEEQBEEQRoDIERcEQRAEQRCEESACcUEQBEEQBEEYASIQFwRBEARBEIQRIAJxQRAEQRAEQRgBIhAXBEEQBEEQhBEgAnFBEARBEARBGAEiEBcEQRAEQRCEESAC8UPMqlWrWLJkCTNmzKCurm7A9OaCIAi7U1dXx5133jnSzRjk2Wefpa6ujqamppFuiiDsF9v3PXHMjw1iivtDSDab5corr8RqtXLttddit9spLS0d6WYdcn73u9/hcDg4/fTTR7opgjDq3HvvvdTU1OSmsRYEYeiSySQPPvggc+fOzc0iKowscUf8ELJ161aam5u54IILOOusszjttNPw+Xwj3axDzlNPPcVzzz030s0QhFHpvvvu49VXXx20/LTTTmPVqlWUlZWNQKsE4cDbm2M+mUyybNky3nvvvf3YMmFPiED8ENLT0wOAx+MZlvdLJBLD8j6CIByaNE0jnU4Py3uZTCZsNhuSJA3L+wnCwU4c82ODCMQPEUuXLuWcc84B4IorrqCuro5zzz2XtWvXsnTpUo477jgaGhpYuHAh1157Lb29vQN+/84776Suro7169fzwx/+kDlz5nD22WfnXv/zn//M6aefzrRp05g7dy5XXXUVra2te9TGUCjEr371K0499VRmzpzJrFmzuPDCC1m7du2A9d59913q6upYvnw5y5Yt48gjj2TmzJn84Ac/IBqNkslk+O///m8WLFjAzJkzufbaa8lkMgPeQ1EU7rrrLo4//njq6+tZtGgR/+///b9B6+0sH3bRokUsXbo093N/rt6KFSv45S9/yfz585kxYwaXXnpp7gKo//fWrVvHe++9R11dXe57EEan/n6xadMmrrnmGmbPns38+fO5/fbb0XWd1tZWvv/97zNr1iwWLlzIb3/72wG/n8lk+M1vfsMJJ5xAfX09Rx99NLfeeuug4/CZZ57hvPPOY8GCBdTX13PSSSfx5JNPDmrPokWLuPjii/nggw8444wzaGho4LjjjuP555/f423LZDLcfPPNzJ8/n5kzZ3LJJZfQ1tY2aL2lS5eyaNGine6bbdXV1fHzn/+cv/zlL5x88sk0NDTw73//G4CHHnqIJUuWMG/ePKZNm8bpp5/Oyy+/POj3E4kEzz33XK7/9PfDneXL/u53v+Pkk0+mvr6eI444ghtvvJFIJDJgnXPPPZdTTjmF9evXc+655zJ9+nSOPPJIHnjggT3eb8KBIfrejo/51atXc8EFF+T60aJFi7j22msBaGpqYsGCBQAsW7Ys14f6z3F7Gg9s2bKFpUuXcthhhzF79myuvfZaksnkoHb++c9/5owzzmD69OnMmTOHb3/72/zv//7vgHXeeOMNzj77bGbMmMHMmTO56KKLWLdu3R7vu9FI5IgfIs466yyKioq49957Offcc2loaCA/P5+33nqLxsZGTj/9dAoKCli3bh1PP/0069ev5+mnnx50pX3FFVcwbtw4rrrqKnRdB+Cee+7hjjvuYPHixZxxxhn09PTwxBNP8O1vf5vnn38er9c7pDY2Njby6quv8tWvfpXy8nK6urr4wx/+wDnnnMNf//pXioqKBqx///33Y7fbueiii9iyZQtPPPEEZrMZSZKIRCJcdtllrFy5kmeffZaysjIuu+yy3O/+9Kc/5bnnnuPEE0/k/PPPZ9WqVdx3331s2LCBu+66a6/380033YTX6+Wyyy6jubmZRx99lJ///OfcfvvtAPz4xz/mF7/4BU6nk0suuQSA/Pz8vf484eBw1VVXUV1dzQ9/+EPeeOMN7rnnHvx+P7///e+ZP38+11xzDS+88AK/+tWvaGhoYM6cOWiaxve//31WrFjBmWeeSXV1NV988QWPPvoomzdv5u677869/1NPPcXEiRNZtGgRZrOZ119/nRtvvBFd1/n2t789oC1btmzhiiuu4IwzzuAb3/gGzzzzDEuXLmXq1KlMnDhxyNv0k5/8hL/85S+ccsopzJo1i3feeYeLLrpon/fVO++8w0svvcS3v/1tAoFA7rH6Y489xqJFizj11FPJZrP89a9/5YorruC+++7jmGOOAeDWW2/lpz/9KdOmTePMM88EoLKycqefdeedd7Js2TIOP/xw/uM//oNNmzbx1FNPsXr1ap566iksFktu3XA4zIUXXsgJJ5zA4sWL+dvf/savf/1ramtrOfroo/d5u4X9Q/S9L3V3d3PBBRcQCAS46KKL8Hq9NDU18corrwAQDAa54YYbuOGGGzjhhBM44YQTAHIXzHsaD1x55ZWUl5dz9dVX89lnn/HHP/6RYDDIf/3Xf+XWWbZsGXfeeWfuZpnFYmHlypW88847HHHEEQA8//zzLF26lCOOOIJrrrmGZDLJU089xdlnn81zzz1HeXn5kPfdqKQLh4x33nlHr62t1V966aXcsmQyOWi9F198Ua+trdXff//93LLf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rOv6oLJHu2vP9u/x0ksv0d7ePuT3GIr+Cgjbb+fDDz884HUw/kh88MEHA9Z7+umnd3q3bygcDodIVRFYvHgx7e3tPP3004NeS6VSuTr9/f10274RjUb3KUjdnaOOOgqAxx9/fMDyHf1tqKysJBqNDigz2tHRkavUMBQmkwlJkgb0q6amJl577bVB6zqdziH1n8MPPxyLxcLjjz8+YN/96U9/IhqNikooh7Cx0ve2Fw6HB51D+wPg/nQvh8MBDE6XHI54YHvHH388sixz1113DXp60N/OI488ErfbzX333bfDvPZty/+OVeKO+CHM7XYzZ84cHnzwQbLZLEVFRbz55puD6vDuSmVlJVdeeSW33XYbzc3NHH/88bhcLpqamnj11Vc588wzueCCC4b0Xscccwx33XUX1157LTNnzuSLL77ghRdeGHA3azhMmjSJb3zjG/zhD38gEokwZ84cVq9ezXPPPcfxxx+fG7ADxsCu66+/nssvv5zDDz+ctWvX8r//+7/7dId+6tSpPPXUU9x9992MGzeOYDC401xFYew67bTTeOmll7j++ut59913mTVrFqqqsnHjRl5++WUefPDBXC1fi8XCJZdcwpIlS4jH4/zxj38kLy9vn57M7MrkyZM55ZRTePLJJ4lGo8ycOZN33nmHLVu2DFr3pJNO4te//jWXXXYZ5557LqlUiqeeeorx48fvcIDXjhx99NE8/PDDXHjhhZxyyil0d3fz5JNPUllZOShHe+rUqbz99ts8/PDDFBYWUl5enhtQtq1gMMjFF1/MsmXLuPDCC1m0aBGbNm3iySefpKGhga997Wt7t3OEUW+s9L3tPffcczz11FMcf/zxVFZWEo/Hefrpp3G73bkA3263U1NTw0svvURVVRV+v5+JEydSW1u7z/HA9saNG8cll1zC3Xffzdlnn81XvvIVrFYrq1evprCwkB/+8Ie43W5uuOEG/s//+T+cfvrpnHTSSQSDQVpaWnjjjTeYNWsW11133V63YTQQgfgh7rbbbuMXv/gFTz75JLqus3DhQh544AGOPPLIIb/HRRddRFVVFY888kiuBndxcTELFy7c4UQfO3PJJZeQTCZ54YUXWL58OVOmTOG+++7jtttu2+Pt2p2bbrqJ8vJynnvuOV599VXy8/O5+OKLBzySA6MKSlNTE3/605/497//zezZs3n44Yf57ne/u9effemll9LS0sKDDz5IPB5n7ty5IhA/BPXfKXrkkUf485//zCuvvILD4aC8vJxzzz03l+o1YcIEfvOb33D77bfzq1/9ivz8fP7jP/6DYDDIj3/84/3WvptvvplAIMALL7zAa6+9xrx587j//vsH3UkOBAIsW7aMW265hf/7f/9vrq7wli1bhhyIL1iwgP/+7//mgQce4Oabb6a8vJxrrrmG5ubmQYH40qVLue6667j99ttJpVJ84xvf2GEgDnD55ZcTDAZ54okn+OUvf4nP5+PMM8/k6quvHlBxSTi0jJW+t725c+eyevVqli9fTldXFx6Ph2nTpvHrX/96wA2tm266iV/84hf88pe/JJvNctlll1FbWzss8cD2rrjiCsrLy3niiSf4n//5HxwOB3V1dQMqFJ166qkUFhZy//3389BDD5HJZCgqKuKwww7j9NNP3+vPHi0kXYwiEwRBEARBEIQDTuSIC4IgCIIgCMIIEKkpwn6XSqV2WIN0Wz6fb0h1TgVB2De7y2212+0DaiMLgjA8RN8TdkSkpgj73bPPPrvTeq39HnvsMebNm3eAWiQIh666urpdvv6Nb3yDW2655QC1RhAOHaLvCTsiAnFhv+vo6GD9+vW7XGfq1Kn4fL4D1CJBOHS99dZbu3y9sLBwh1PQC4Kwb0TfE3ZEBOKCIAiCIAiCMALEYE1BEARBEARBGAEiEBcEQRAEQRCEESACcUEQBEEQBEEYASIQFwRBEARBEIQRIAJxQRAEQRAEQRgBIhAXBEEQBEEQhBEgAnFBEARBEARBGAEiEBcEQRAEQRCEEfD/AYes0ZZ4fi8jAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 750x750 with 12 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create a pairplot to visualize pairwise relationships between variables in the data\n",
    "### YOUR CODE HERE ###\n",
    "\n",
    "sns.pairplot(df2[['fare_amount', 'mean_duration', 'mean_distance']],\n",
    "             plot_kws={'alpha':0.4, 'size':5},\n",
    "             );"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63a4be0b",
   "metadata": {
    "papermill": {
     "duration": 0.035406,
     "end_time": "2024-05-12T19:15:43.114956",
     "exception": false,
     "start_time": "2024-05-12T19:15:43.079550",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "These variables all show linear correlation with each other. Investigate this further."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a8a12bd",
   "metadata": {
    "papermill": {
     "duration": 0.035241,
     "end_time": "2024-05-12T19:15:43.185849",
     "exception": false,
     "start_time": "2024-05-12T19:15:43.150608",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 7. Identify correlations"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b65b5c51",
   "metadata": {
    "papermill": {
     "duration": 0.036718,
     "end_time": "2024-05-12T19:15:43.258051",
     "exception": false,
     "start_time": "2024-05-12T19:15:43.221333",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Next, code a correlation matrix to help determine most correlated variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "a893b5b4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:43.331509Z",
     "iopub.status.busy": "2024-05-12T19:15:43.330995Z",
     "iopub.status.idle": "2024-05-12T19:15:43.348842Z",
     "shell.execute_reply": "2024-05-12T19:15:43.347498Z"
    },
    "papermill": {
     "duration": 0.057513,
     "end_time": "2024-05-12T19:15:43.351449",
     "exception": false,
     "start_time": "2024-05-12T19:15:43.293936",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>VendorID</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>mean_distance</th>\n",
       "      <th>mean_duration</th>\n",
       "      <th>rush_hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>VendorID</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.266463</td>\n",
       "      <td>0.001045</td>\n",
       "      <td>0.004741</td>\n",
       "      <td>0.001876</td>\n",
       "      <td>-0.002874</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>passenger_count</th>\n",
       "      <td>0.266463</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.014942</td>\n",
       "      <td>0.013428</td>\n",
       "      <td>0.015852</td>\n",
       "      <td>-0.022035</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fare_amount</th>\n",
       "      <td>0.001045</td>\n",
       "      <td>0.014942</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.910185</td>\n",
       "      <td>0.859105</td>\n",
       "      <td>-0.020075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean_distance</th>\n",
       "      <td>0.004741</td>\n",
       "      <td>0.013428</td>\n",
       "      <td>0.910185</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.874864</td>\n",
       "      <td>-0.039725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean_duration</th>\n",
       "      <td>0.001876</td>\n",
       "      <td>0.015852</td>\n",
       "      <td>0.859105</td>\n",
       "      <td>0.874864</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.021583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rush_hour</th>\n",
       "      <td>-0.002874</td>\n",
       "      <td>-0.022035</td>\n",
       "      <td>-0.020075</td>\n",
       "      <td>-0.039725</td>\n",
       "      <td>-0.021583</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 VendorID  passenger_count  fare_amount  mean_distance  \\\n",
       "VendorID         1.000000         0.266463     0.001045       0.004741   \n",
       "passenger_count  0.266463         1.000000     0.014942       0.013428   \n",
       "fare_amount      0.001045         0.014942     1.000000       0.910185   \n",
       "mean_distance    0.004741         0.013428     0.910185       1.000000   \n",
       "mean_duration    0.001876         0.015852     0.859105       0.874864   \n",
       "rush_hour       -0.002874        -0.022035    -0.020075      -0.039725   \n",
       "\n",
       "                 mean_duration  rush_hour  \n",
       "VendorID              0.001876  -0.002874  \n",
       "passenger_count       0.015852  -0.022035  \n",
       "fare_amount           0.859105  -0.020075  \n",
       "mean_distance         0.874864  -0.039725  \n",
       "mean_duration         1.000000  -0.021583  \n",
       "rush_hour            -0.021583   1.000000  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create correlation matrix containing pairwise correlation of columns, using pearson correlation coefficient\n",
    "df2.corr(method='pearson')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a29a227",
   "metadata": {
    "papermill": {
     "duration": 0.03544,
     "end_time": "2024-05-12T19:15:43.424041",
     "exception": false,
     "start_time": "2024-05-12T19:15:43.388601",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Visualize a correlation heatmap of the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "6de7b6c9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:43.498402Z",
     "iopub.status.busy": "2024-05-12T19:15:43.497947Z",
     "iopub.status.idle": "2024-05-12T19:15:43.918033Z",
     "shell.execute_reply": "2024-05-12T19:15:43.916849Z"
    },
    "papermill": {
     "duration": 0.46023,
     "end_time": "2024-05-12T19:15:43.920785",
     "exception": false,
     "start_time": "2024-05-12T19:15:43.460555",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create correlation heatmap\n",
    "\n",
    "plt.figure(figsize=(6,4))\n",
    "sns.heatmap(df2.corr(method='pearson'), annot=True, cmap='Reds')\n",
    "plt.title('Correlation heatmap',\n",
    "          fontsize=18)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45eff4f7",
   "metadata": {
    "papermill": {
     "duration": 0.036366,
     "end_time": "2024-05-12T19:15:43.994439",
     "exception": false,
     "start_time": "2024-05-12T19:15:43.958073",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Exemplar response:** `mean_duration` and `mean_distance` are both highly correlated with the target variable of `fare_amount` They're also both correlated with each other, with a Pearson correlation of 0.87.\n",
    "\n",
    "Recall that highly correlated predictor variables can be bad for linear regression models when you want to be able to draw statistical inferences about the data from the model. However, correlated predictor variables can still be used to create an accurate predictor if the prediction itself is more important than using the model as a tool to learn about your data.\n",
    "\n",
    "This model will predict `fare_amount`, which will be used as a predictor variable in machine learning models. Therefore, try modeling with both variables even though they are correlated."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "21f78480",
   "metadata": {
    "id": "lgPul2DiY6T4",
    "papermill": {
     "duration": 0.036738,
     "end_time": "2024-05-12T19:15:44.068104",
     "exception": false,
     "start_time": "2024-05-12T19:15:44.031366",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "## PACE: **Construct**\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "87671bd3",
   "metadata": {
    "id": "07UJJm41ajgf",
    "papermill": {
     "duration": 0.037391,
     "end_time": "2024-05-12T19:15:44.143586",
     "exception": false,
     "start_time": "2024-05-12T19:15:44.106195",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 8a. Split data into outcome variable and features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0c8bcc93",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:44.219522Z",
     "iopub.status.busy": "2024-05-12T19:15:44.219079Z",
     "iopub.status.idle": "2024-05-12T19:15:44.230814Z",
     "shell.execute_reply": "2024-05-12T19:15:44.229650Z"
    },
    "id": "AzcDgLRET4d7",
    "outputId": "17e373f7-1716-4dfa-d76b-b63818f1bfa0",
    "papermill": {
     "duration": 0.052105,
     "end_time": "2024-05-12T19:15:44.233004",
     "exception": false,
     "start_time": "2024-05-12T19:15:44.180899",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 22699 entries, 0 to 22698\n",
      "Data columns (total 6 columns):\n",
      " #   Column           Non-Null Count  Dtype  \n",
      "---  ------           --------------  -----  \n",
      " 0   VendorID         22699 non-null  int64  \n",
      " 1   passenger_count  22699 non-null  int64  \n",
      " 2   fare_amount      22699 non-null  float64\n",
      " 3   mean_distance    22699 non-null  float64\n",
      " 4   mean_duration    22699 non-null  float64\n",
      " 5   rush_hour        22699 non-null  int64  \n",
      "dtypes: float64(3), int64(3)\n",
      "memory usage: 1.0 MB\n"
     ]
    }
   ],
   "source": [
    "df2.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "635f663d",
   "metadata": {
    "papermill": {
     "duration": 0.036551,
     "end_time": "2024-05-12T19:15:44.308633",
     "exception": false,
     "start_time": "2024-05-12T19:15:44.272082",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Set your X and y variables. X represents the features and y represents the outcome (target) variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "6c6acca9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:44.384458Z",
     "iopub.status.busy": "2024-05-12T19:15:44.384032Z",
     "iopub.status.idle": "2024-05-12T19:15:44.398315Z",
     "shell.execute_reply": "2024-05-12T19:15:44.397299Z"
    },
    "papermill": {
     "duration": 0.054875,
     "end_time": "2024-05-12T19:15:44.400486",
     "exception": false,
     "start_time": "2024-05-12T19:15:44.345611",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>VendorID</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>mean_distance</th>\n",
       "      <th>mean_duration</th>\n",
       "      <th>rush_hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>3.521667</td>\n",
       "      <td>22.847222</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.108889</td>\n",
       "      <td>24.470370</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.881429</td>\n",
       "      <td>7.250000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3.700000</td>\n",
       "      <td>30.250000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>4.435000</td>\n",
       "      <td>14.616667</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   VendorID  passenger_count  mean_distance  mean_duration  rush_hour\n",
       "0         2                6       3.521667      22.847222          0\n",
       "1         1                1       3.108889      24.470370          0\n",
       "2         1                1       0.881429       7.250000          1\n",
       "3         2                1       3.700000      30.250000          0\n",
       "4         2                1       4.435000      14.616667          0"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Remove the target column from the features\n",
    "X = df2.drop(columns=['fare_amount'])\n",
    "\n",
    "# Set y variable\n",
    "y = df2[['fare_amount']]\n",
    "\n",
    "# Display first few rows\n",
    "X.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0b406544",
   "metadata": {
    "id": "o3ArC_5xa7Oi",
    "papermill": {
     "duration": 0.037277,
     "end_time": "2024-05-12T19:15:44.475227",
     "exception": false,
     "start_time": "2024-05-12T19:15:44.437950",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 8b. Pre-process data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca5f7614",
   "metadata": {
    "papermill": {
     "duration": 0.037437,
     "end_time": "2024-05-12T19:15:44.550918",
     "exception": false,
     "start_time": "2024-05-12T19:15:44.513481",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Dummy encode categorical variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "7c022760",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:44.629258Z",
     "iopub.status.busy": "2024-05-12T19:15:44.628409Z",
     "iopub.status.idle": "2024-05-12T19:15:44.653297Z",
     "shell.execute_reply": "2024-05-12T19:15:44.652297Z"
    },
    "id": "QvDpwcQm0f35",
    "outputId": "308b7689-9ff9-4347-9a2a-4050eb7432e8",
    "papermill": {
     "duration": 0.067038,
     "end_time": "2024-05-12T19:15:44.655656",
     "exception": false,
     "start_time": "2024-05-12T19:15:44.588618",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>mean_distance</th>\n",
       "      <th>mean_duration</th>\n",
       "      <th>rush_hour</th>\n",
       "      <th>VendorID_2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>6</td>\n",
       "      <td>3.521667</td>\n",
       "      <td>22.847222</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>3.108889</td>\n",
       "      <td>24.470370</td>\n",
       "      <td>0</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0.881429</td>\n",
       "      <td>7.250000</td>\n",
       "      <td>1</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>3.700000</td>\n",
       "      <td>30.250000</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>4.435000</td>\n",
       "      <td>14.616667</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   passenger_count  mean_distance  mean_duration  rush_hour  VendorID_2\n",
       "0                6       3.521667      22.847222          0        True\n",
       "1                1       3.108889      24.470370          0       False\n",
       "2                1       0.881429       7.250000          1       False\n",
       "3                1       3.700000      30.250000          0        True\n",
       "4                1       4.435000      14.616667          0        True"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Convert VendorID to string\n",
    "X['VendorID'] = X['VendorID'].astype(str)\n",
    "\n",
    "# Get dummies\n",
    "X = pd.get_dummies(X, drop_first=True)\n",
    "X.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78b2e383",
   "metadata": {
    "id": "iDYyjWssbnBG",
    "papermill": {
     "duration": 0.037287,
     "end_time": "2024-05-12T19:15:44.730962",
     "exception": false,
     "start_time": "2024-05-12T19:15:44.693675",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Split data into training and test sets"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab4df263",
   "metadata": {
    "id": "Jo706RzDN2ql",
    "papermill": {
     "duration": 0.037316,
     "end_time": "2024-05-12T19:15:44.805392",
     "exception": false,
     "start_time": "2024-05-12T19:15:44.768076",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Create training and testing sets. The test set should contain 20% of the total samples. Set `random_state=0`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "a712428e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:44.881282Z",
     "iopub.status.busy": "2024-05-12T19:15:44.880849Z",
     "iopub.status.idle": "2024-05-12T19:15:44.891749Z",
     "shell.execute_reply": "2024-05-12T19:15:44.890647Z"
    },
    "id": "A2BNUvacwaZY",
    "papermill": {
     "duration": 0.051624,
     "end_time": "2024-05-12T19:15:44.894123",
     "exception": false,
     "start_time": "2024-05-12T19:15:44.842499",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Create training and testing sets\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "85909ddd",
   "metadata": {
    "id": "jI4w3gXP5bhl",
    "papermill": {
     "duration": 0.036819,
     "end_time": "2024-05-12T19:15:44.968259",
     "exception": false,
     "start_time": "2024-05-12T19:15:44.931440",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Standardize the data\n",
    "\n",
    "Use `StandardScaler()`, `fit()`, and `transform()` to standardize the `X_train` variables. Assign the results to a variable called `X_train_scaled`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "0c59f3b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:45.046205Z",
     "iopub.status.busy": "2024-05-12T19:15:45.045154Z",
     "iopub.status.idle": "2024-05-12T19:15:45.061632Z",
     "shell.execute_reply": "2024-05-12T19:15:45.060088Z"
    },
    "id": "4Y3T2poF28fP",
    "outputId": "e22f38e7-42af-4e96-ec5b-e2fe64935b90",
    "papermill": {
     "duration": 0.058665,
     "end_time": "2024-05-12T19:15:45.064256",
     "exception": false,
     "start_time": "2024-05-12T19:15:45.005591",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "X_train scaled: [[-0.50301524  0.8694684   0.17616665 -0.64893329  0.89286563]\n",
      " [-0.50301524 -0.60011281 -0.69829589  1.54099045  0.89286563]\n",
      " [ 0.27331093 -0.47829156 -0.57301906 -0.64893329 -1.11998936]\n",
      " ...\n",
      " [-0.50301524 -0.45121122 -0.6788917  -0.64893329 -1.11998936]\n",
      " [-0.50301524 -0.58944763 -0.85743597  1.54099045 -1.11998936]\n",
      " [ 1.82596329  0.83673851  1.13212101 -0.64893329  0.89286563]]\n"
     ]
    }
   ],
   "source": [
    "# Standardize the X variables\n",
    "scaler = StandardScaler().fit(X_train)\n",
    "X_train_scaled = scaler.transform(X_train)\n",
    "print('X_train scaled:', X_train_scaled)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de95a603",
   "metadata": {
    "id": "wk0rjKeO3JLv",
    "papermill": {
     "duration": 0.037712,
     "end_time": "2024-05-12T19:15:45.139628",
     "exception": false,
     "start_time": "2024-05-12T19:15:45.101916",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Fit the model\n",
    "\n",
    "Instantiate your model and fit it to the training data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "dcaaec3c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:45.217466Z",
     "iopub.status.busy": "2024-05-12T19:15:45.217052Z",
     "iopub.status.idle": "2024-05-12T19:15:45.254394Z",
     "shell.execute_reply": "2024-05-12T19:15:45.253192Z"
    },
    "id": "SClNm5hWotj6",
    "outputId": "8df935cb-95ae-4fd8-8c88-50931f492141",
    "papermill": {
     "duration": 0.079152,
     "end_time": "2024-05-12T19:15:45.256888",
     "exception": false,
     "start_time": "2024-05-12T19:15:45.177736",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Fit your model to the training data\n",
    "lr=LinearRegression()\n",
    "lr.fit(X_train_scaled, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eac87559",
   "metadata": {
    "id": "HMj6QkK1cLmS",
    "papermill": {
     "duration": 0.037951,
     "end_time": "2024-05-12T19:15:45.333372",
     "exception": false,
     "start_time": "2024-05-12T19:15:45.295421",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 8c. Evaluate model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e3bd609",
   "metadata": {
    "id": "AromLx7t5hjt",
    "papermill": {
     "duration": 0.038012,
     "end_time": "2024-05-12T19:15:45.409332",
     "exception": false,
     "start_time": "2024-05-12T19:15:45.371320",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Train data\n",
    "\n",
    "Evaluate your model performance by calculating the residual sum of squares and the explained variance score (R^2). Calculate the Mean Absolute Error, Mean Squared Error, and the Root Mean Squared Error."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "5c6ed35b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:45.487854Z",
     "iopub.status.busy": "2024-05-12T19:15:45.487485Z",
     "iopub.status.idle": "2024-05-12T19:15:45.508214Z",
     "shell.execute_reply": "2024-05-12T19:15:45.506833Z"
    },
    "id": "33rE1x9e3U6t",
    "outputId": "7cd2e70f-38c7-415a-b31b-927c2b59a3ff",
    "papermill": {
     "duration": 0.06359,
     "end_time": "2024-05-12T19:15:45.511064",
     "exception": false,
     "start_time": "2024-05-12T19:15:45.447474",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coefficient of determination: 0.8398434585044773\n",
      "R^2: 0.8398434585044773\n",
      "MAE: 2.186666416775414\n",
      "MSE: 17.88973296349268\n",
      "RMSE: 4.229625629236313\n"
     ]
    }
   ],
   "source": [
    "# Evaluate the model performance on the training data\n",
    "r_sq = lr.score(X_train_scaled, y_train)\n",
    "print('Coefficient of determination:', r_sq)\n",
    "y_pred_train = lr.predict(X_train_scaled)\n",
    "print('R^2:', r2_score(y_train, y_pred_train))\n",
    "print('MAE:', mean_absolute_error(y_train, y_pred_train))\n",
    "print('MSE:', mean_squared_error(y_train, y_pred_train))\n",
    "print('RMSE:',np.sqrt(mean_squared_error(y_train, y_pred_train)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51185c23",
   "metadata": {
    "papermill": {
     "duration": 0.055289,
     "end_time": "2024-05-12T19:15:45.633838",
     "exception": false,
     "start_time": "2024-05-12T19:15:45.578549",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Test data\n",
    "\n",
    "Calculate the same metrics on the test data. Remember to scale the `X_test` data using the scaler that was fit to the training data. Do not refit the scaler to the testing data, just transform it. Call the results `X_test_scaled`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "2d6acb03",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:45.712444Z",
     "iopub.status.busy": "2024-05-12T19:15:45.712015Z",
     "iopub.status.idle": "2024-05-12T19:15:45.720602Z",
     "shell.execute_reply": "2024-05-12T19:15:45.719561Z"
    },
    "papermill": {
     "duration": 0.051007,
     "end_time": "2024-05-12T19:15:45.722910",
     "exception": false,
     "start_time": "2024-05-12T19:15:45.671903",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Scale the X_test data\n",
    "X_test_scaled = scaler.transform(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "5aef10e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:45.800560Z",
     "iopub.status.busy": "2024-05-12T19:15:45.800142Z",
     "iopub.status.idle": "2024-05-12T19:15:45.819088Z",
     "shell.execute_reply": "2024-05-12T19:15:45.817999Z"
    },
    "id": "sCyrnw_nyAcK",
    "outputId": "ef5b979a-6598-446b-def9-9463aa0e44dc",
    "papermill": {
     "duration": 0.059986,
     "end_time": "2024-05-12T19:15:45.821198",
     "exception": false,
     "start_time": "2024-05-12T19:15:45.761212",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coefficient of determination: 0.8682583641795454\n",
      "R^2: 0.8682583641795454\n",
      "MAE: 2.1336549840593864\n",
      "MSE: 14.326454156998942\n",
      "RMSE: 3.7850302716093225\n"
     ]
    }
   ],
   "source": [
    "# Evaluate the model performance on the testing data\n",
    "r_sq_test = lr.score(X_test_scaled, y_test)\n",
    "print('Coefficient of determination:', r_sq_test)\n",
    "y_pred_test = lr.predict(X_test_scaled)\n",
    "print('R^2:', r2_score(y_test, y_pred_test))\n",
    "print('MAE:', mean_absolute_error(y_test,y_pred_test))\n",
    "print('MSE:', mean_squared_error(y_test, y_pred_test))\n",
    "print('RMSE:',np.sqrt(mean_squared_error(y_test, y_pred_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "06a53690",
   "metadata": {
    "id": "vB3DOXfIySe3",
    "papermill": {
     "duration": 0.055392,
     "end_time": "2024-05-12T19:15:45.943300",
     "exception": false,
     "start_time": "2024-05-12T19:15:45.887908",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Exemplar note:** The model performance is high on both training and test sets, suggesting that there is no bias in the model and that the model is not overfit. In fact, the test scores were somewhat better.\n",
    "\n",
    "For the test data, an R<sup>2</sup> of 0.868 means that 86.8% of the variance in the `fare_amount` variable is described by the model.\n",
    "\n",
    "The mean absolute error is informative here because, for the purposes of the model, an error of two is not more than twice as bad as an error of one."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2685557",
   "metadata": {
    "id": "cp7ojoBldEYy",
    "papermill": {
     "duration": 0.03776,
     "end_time": "2024-05-12T19:15:46.019204",
     "exception": false,
     "start_time": "2024-05-12T19:15:45.981444",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "## PACE: **Execute**\n",
    "\n",
    "Consider the questions in your PACE Strategy Document to reflect on the Execute stage."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6f21dc59",
   "metadata": {
    "id": "F_l3bkxQdJ3a",
    "papermill": {
     "duration": 0.037642,
     "end_time": "2024-05-12T19:15:46.095959",
     "exception": false,
     "start_time": "2024-05-12T19:15:46.058317",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 9a. Results\n",
    "\n",
    "Use the code cell below to get `actual`,`predicted`, and `residual` for the testing set, and store them as columns in a `results` dataframe."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "98a5ce2b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:46.172995Z",
     "iopub.status.busy": "2024-05-12T19:15:46.172598Z",
     "iopub.status.idle": "2024-05-12T19:15:46.186312Z",
     "shell.execute_reply": "2024-05-12T19:15:46.185091Z"
    },
    "id": "cSl5gbXfBPBN",
    "outputId": "ca3ca3db-4f77-402f-9e98-14986d4fbf2c",
    "papermill": {
     "duration": 0.055021,
     "end_time": "2024-05-12T19:15:46.188499",
     "exception": false,
     "start_time": "2024-05-12T19:15:46.133478",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>actual</th>\n",
       "      <th>predicted</th>\n",
       "      <th>residual</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5818</th>\n",
       "      <td>14.0</td>\n",
       "      <td>12.356503</td>\n",
       "      <td>1.643497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18134</th>\n",
       "      <td>28.0</td>\n",
       "      <td>16.314595</td>\n",
       "      <td>11.685405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4655</th>\n",
       "      <td>5.5</td>\n",
       "      <td>6.726789</td>\n",
       "      <td>-1.226789</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7378</th>\n",
       "      <td>15.5</td>\n",
       "      <td>16.227206</td>\n",
       "      <td>-0.727206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13914</th>\n",
       "      <td>9.5</td>\n",
       "      <td>10.536408</td>\n",
       "      <td>-1.036408</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       actual  predicted   residual\n",
       "5818     14.0  12.356503   1.643497\n",
       "18134    28.0  16.314595  11.685405\n",
       "4655      5.5   6.726789  -1.226789\n",
       "7378     15.5  16.227206  -0.727206\n",
       "13914     9.5  10.536408  -1.036408"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a `results` dataframe\n",
    "results = pd.DataFrame(data={'actual': y_test['fare_amount'],\n",
    "                             'predicted': y_pred_test.ravel()})\n",
    "results['residual'] = results['actual'] - results['predicted']\n",
    "results.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11e33f8b",
   "metadata": {
    "id": "mwRmSDS3eyeH",
    "papermill": {
     "duration": 0.041916,
     "end_time": "2024-05-12T19:15:46.268307",
     "exception": false,
     "start_time": "2024-05-12T19:15:46.226391",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 9b. Visualize model results"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aab85f22",
   "metadata": {
    "id": "y3vQ-mB51dfd",
    "papermill": {
     "duration": 0.037608,
     "end_time": "2024-05-12T19:15:46.344426",
     "exception": false,
     "start_time": "2024-05-12T19:15:46.306818",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Create a scatterplot to visualize `actual` vs. `predicted`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "da0fda77",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:46.423723Z",
     "iopub.status.busy": "2024-05-12T19:15:46.423351Z",
     "iopub.status.idle": "2024-05-12T19:15:46.838340Z",
     "shell.execute_reply": "2024-05-12T19:15:46.837211Z"
    },
    "id": "IBFU_dicBjwQ",
    "outputId": "7216a9e5-2f17-4352-a0a9-809132756acf",
    "papermill": {
     "duration": 0.456851,
     "end_time": "2024-05-12T19:15:46.840747",
     "exception": false,
     "start_time": "2024-05-12T19:15:46.383896",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create a scatterplot to visualize `predicted` over `actual`\n",
    "fig, ax = plt.subplots(figsize=(6, 6))\n",
    "sns.set(style='whitegrid')\n",
    "sns.scatterplot(x='actual',\n",
    "                y='predicted',\n",
    "                data=results,\n",
    "                s=20,\n",
    "                alpha=0.5,\n",
    "                ax=ax\n",
    ")\n",
    "plt.plot([0,60], [0,60], c='red', linewidth=2)\n",
    "plt.title('Actual vs. predicted');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ce31f26",
   "metadata": {
    "id": "IbO71S_R9IcY",
    "papermill": {
     "duration": 0.039749,
     "end_time": "2024-05-12T19:15:46.921484",
     "exception": false,
     "start_time": "2024-05-12T19:15:46.881735",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Visualize the distribution of the `residuals` using a histogram"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "3d91ce15",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:47.002978Z",
     "iopub.status.busy": "2024-05-12T19:15:47.002585Z",
     "iopub.status.idle": "2024-05-12T19:15:47.587296Z",
     "shell.execute_reply": "2024-05-12T19:15:47.586190Z"
    },
    "id": "3a0UYoEr9Nx6",
    "outputId": "4a3b91b1-7f30-43d6-8f2f-24e12217a866",
    "papermill": {
     "duration": 0.628146,
     "end_time": "2024-05-12T19:15:47.589600",
     "exception": false,
     "start_time": "2024-05-12T19:15:46.961454",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualize the distribution of the `residuals`\n",
    "sns.histplot(results['residual'], bins=np.arange(-15,15.5,0.5))\n",
    "plt.title('Distribution of the residuals')\n",
    "plt.xlabel('residual value')\n",
    "plt.ylabel('count');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "557429ec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:47.671904Z",
     "iopub.status.busy": "2024-05-12T19:15:47.671483Z",
     "iopub.status.idle": "2024-05-12T19:15:47.679284Z",
     "shell.execute_reply": "2024-05-12T19:15:47.678056Z"
    },
    "papermill": {
     "duration": 0.051734,
     "end_time": "2024-05-12T19:15:47.681621",
     "exception": false,
     "start_time": "2024-05-12T19:15:47.629887",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.01544262152868054"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "results['residual'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0b9c008",
   "metadata": {
    "papermill": {
     "duration": 0.040068,
     "end_time": "2024-05-12T19:15:47.763152",
     "exception": false,
     "start_time": "2024-05-12T19:15:47.723084",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The distribution of the residuals is normal and has a mean of -0.015. The residuals represent the variance in the outcome variable that is not explained by the model. A normal distribution around zero is good, as it demonstrates that the models errors are evenly distributed and unbiased."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c93b47d3",
   "metadata": {
    "id": "OCnELck-9h5M",
    "papermill": {
     "duration": 0.040282,
     "end_time": "2024-05-12T19:15:47.843729",
     "exception": false,
     "start_time": "2024-05-12T19:15:47.803447",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Create a scatterplot of `residuals` over `predicted`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "8f260fd8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:47.926147Z",
     "iopub.status.busy": "2024-05-12T19:15:47.925750Z",
     "iopub.status.idle": "2024-05-12T19:15:48.211421Z",
     "shell.execute_reply": "2024-05-12T19:15:48.210310Z"
    },
    "id": "7Kmr2U8A95fY",
    "outputId": "da0e2714-e9be-4d19-8a5e-11d16a437ce2",
    "papermill": {
     "duration": 0.330059,
     "end_time": "2024-05-12T19:15:48.214216",
     "exception": false,
     "start_time": "2024-05-12T19:15:47.884157",
     "status": "completed"
    },
    "scrolled": true,
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create a scatterplot of `residuals` over `predicted`\n",
    "\n",
    "sns.scatterplot(x='predicted', y='residual', data=results)\n",
    "plt.axhline(0, c='red')\n",
    "plt.title('Scatterplot of residuals over predicted values')\n",
    "plt.xlabel('predicted value')\n",
    "plt.ylabel('residual value')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc967dca",
   "metadata": {
    "papermill": {
     "duration": 0.041937,
     "end_time": "2024-05-12T19:15:48.298593",
     "exception": false,
     "start_time": "2024-05-12T19:15:48.256656",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The model's residuals are evenly distributed above and below zero, with the exception of the sloping lines from the upper-left corner to the lower-right corner, which you know are the imputed maximum of \\\\$62.50 and the flat rate of \\\\$52 for JFK airport trips."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d343c53a",
   "metadata": {
    "papermill": {
     "duration": 0.042388,
     "end_time": "2024-05-12T19:15:48.382846",
     "exception": false,
     "start_time": "2024-05-12T19:15:48.340458",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 9c. Coefficients\n",
    "\n",
    "Use the `coef_` attribute to get the model's coefficients. The coefficients are output in the order of the features that were used to train the model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "a112df5b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:48.469029Z",
     "iopub.status.busy": "2024-05-12T19:15:48.468618Z",
     "iopub.status.idle": "2024-05-12T19:15:48.480812Z",
     "shell.execute_reply": "2024-05-12T19:15:48.479730Z"
    },
    "papermill": {
     "duration": 0.058235,
     "end_time": "2024-05-12T19:15:48.483067",
     "exception": false,
     "start_time": "2024-05-12T19:15:48.424832",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>mean_distance</th>\n",
       "      <th>mean_duration</th>\n",
       "      <th>rush_hour</th>\n",
       "      <th>VendorID_2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.030825</td>\n",
       "      <td>7.133867</td>\n",
       "      <td>2.812115</td>\n",
       "      <td>0.110233</td>\n",
       "      <td>-0.054373</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   passenger_count  mean_distance  mean_duration  rush_hour  VendorID_2\n",
       "0         0.030825       7.133867       2.812115   0.110233   -0.054373"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get model coefficients\n",
    "coefficients = pd.DataFrame(lr.coef_, columns=X.columns)\n",
    "coefficients"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a80ea6a1",
   "metadata": {
    "papermill": {
     "duration": 0.041335,
     "end_time": "2024-05-12T19:15:48.567934",
     "exception": false,
     "start_time": "2024-05-12T19:15:48.526599",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The coefficients reveal that `mean_distance` was the feature with the greatest weight in the model's final prediction. Be careful here! A common misinterpretation is that for every mile traveled, the fare amount increases by a mean of \\\\$7.13. This is incorrect. Remember, the data used to train the model was standardized with `StandardScaler()`. As such, the units are no longer miles. In other words, you cannot say \"for every mile traveled...\", as stated above. The correct interpretation of this coefficient is: controlling for other variables, *for every +1 change in standard deviation*, the fare amount increases by a mean of \\\\$7.13. \n",
    "\n",
    "Note also that because some highly correlated features were not removed, the confidence interval of this assessment is wider.\n",
    "\n",
    "So, translate this back to miles instead of standard deviation (i.e., unscale the data). \n",
    "\n",
    "1. Calculate the standard deviation of `mean_distance` in the `X_train` data.\n",
    "\n",
    "2. Divide the coefficient (7.133867) by the result to yield a more intuitive interpretation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "6a0a9835",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:48.653199Z",
     "iopub.status.busy": "2024-05-12T19:15:48.652265Z",
     "iopub.status.idle": "2024-05-12T19:15:48.659474Z",
     "shell.execute_reply": "2024-05-12T19:15:48.658415Z"
    },
    "papermill": {
     "duration": 0.052053,
     "end_time": "2024-05-12T19:15:48.661486",
     "exception": false,
     "start_time": "2024-05-12T19:15:48.609433",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3.574812975256436\n",
      "1.9955916713344308\n"
     ]
    }
   ],
   "source": [
    "# 1. Calculate SD of `mean_distance` in X_train data\n",
    "print(X_train['mean_distance'].std())\n",
    "\n",
    "# 2. Divide the model coefficient by the standard deviation\n",
    "print(7.133867 / X_train['mean_distance'].std())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "25c32603",
   "metadata": {
    "papermill": {
     "duration": 0.042299,
     "end_time": "2024-05-12T19:15:48.745992",
     "exception": false,
     "start_time": "2024-05-12T19:15:48.703693",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now you can make a more intuitive interpretation: for every 3.57 miles traveled, the fare increased by a mean of \\\\$7.13. Or, reduced: for every 1 mile traveled, the fare increased by a mean of \\\\$2.00."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "295a2d3e",
   "metadata": {
    "id": "P6AlDDyhdzmG",
    "papermill": {
     "duration": 0.041342,
     "end_time": "2024-05-12T19:15:48.830730",
     "exception": false,
     "start_time": "2024-05-12T19:15:48.789388",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 9d. Conclusion\n",
    "\n",
    "**What are the key takeaways from this notebook?**\n",
    "\n",
    "* Multiple linear regression is a powerful tool to estimate a dependent continous variable from several independent variables.\n",
    "* Exploratory data analysis is useful for selecting both numeric and categorical features for multiple linear regression.\n",
    "* Fitting multiple linear regression models may require trial and error to select variables that fit an accurate model while maintaining model assumptions (or not, depending on your use case).\n",
    "\n",
    "**What results can be presented from this notebook?**\n",
    "\n",
    "*  You can discuss meeting linear regression assumptions, and you can present the MAE and RMSE scores obtained from the model.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c22c463",
   "metadata": {
    "papermill": {
     "duration": 0.04155,
     "end_time": "2024-05-12T19:15:48.914490",
     "exception": false,
     "start_time": "2024-05-12T19:15:48.872940",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# BONUS CONTENT\n",
    "\n",
    "More work must be done to prepare the predictions to be used as inputs into the model for the upcoming course. This work will be broken into the following steps:\n",
    "\n",
    "1. Get the model's predictions on the full dataset.\n",
    "\n",
    "2. Impute the constant fare rate of \\$52 for all trips with rate codes of `2`.\n",
    "\n",
    "3. Check the model's performance on the full dataset.\n",
    "\n",
    "4. Save the final predictions and `mean_duration` and `mean_distance` columns for downstream use.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "510f59e4",
   "metadata": {
    "papermill": {
     "duration": 0.041276,
     "end_time": "2024-05-12T19:15:48.997469",
     "exception": false,
     "start_time": "2024-05-12T19:15:48.956193",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 1. Predict on full dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "6ebeb64e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:49.141298Z",
     "iopub.status.busy": "2024-05-12T19:15:49.140097Z",
     "iopub.status.idle": "2024-05-12T19:15:49.154866Z",
     "shell.execute_reply": "2024-05-12T19:15:49.153663Z"
    },
    "papermill": {
     "duration": 0.119386,
     "end_time": "2024-05-12T19:15:49.158873",
     "exception": false,
     "start_time": "2024-05-12T19:15:49.039487",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_scaled = scaler.transform(X)\n",
    "y_preds_full = lr.predict(X_scaled)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "34a643f4",
   "metadata": {
    "papermill": {
     "duration": 0.060736,
     "end_time": "2024-05-12T19:15:49.291941",
     "exception": false,
     "start_time": "2024-05-12T19:15:49.231205",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 2. Impute ratecode 2 fare\n",
    "\n",
    "The data dictionary says that the `RatecodeID` column captures the following information:\n",
    "\n",
    "1 = standard rate  \n",
    "2 = JFK (airport)  \n",
    "3 = Newark (airport)  \n",
    "4 = Nassau or Westchester  \n",
    "5 = Negotiated fare  \n",
    "6 = Group ride  \n",
    "\n",
    "This means that some fares don't need to be predicted. They can simply be imputed based on their rate code. Specifically, all rate codes of `2` can be imputed with \\$52, as this is a flat rate for JFK airport.\n",
    "\n",
    "The other rate codes have some variation (not shown here, but feel free to check for yourself). They are not a fixed rate, so these fares will remain untouched.\n",
    "\n",
    "Impute `52` at all predictions where `RatecodeID` is `2`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "f0809852",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:49.377106Z",
     "iopub.status.busy": "2024-05-12T19:15:49.376677Z",
     "iopub.status.idle": "2024-05-12T19:15:49.392200Z",
     "shell.execute_reply": "2024-05-12T19:15:49.391149Z"
    },
    "papermill": {
     "duration": 0.061271,
     "end_time": "2024-05-12T19:15:49.394746",
     "exception": false,
     "start_time": "2024-05-12T19:15:49.333475",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>y_preds_full</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>2</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     RatecodeID  y_preds_full\n",
       "11            2          52.0\n",
       "110           2          52.0\n",
       "161           2          52.0\n",
       "247           2          52.0\n",
       "379           2          52.0"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a new df containing just the RatecodeID col from the whole dataset\n",
    "final_preds = df[['RatecodeID']].copy()\n",
    "\n",
    "# Add a column containing all the predictions\n",
    "final_preds['y_preds_full'] = y_preds_full\n",
    "\n",
    "# Impute a prediction of 52 at all rows where RatecodeID == 2\n",
    "final_preds.loc[final_preds['RatecodeID']==2, 'y_preds_full'] = 52\n",
    "\n",
    "# Check that it worked\n",
    "final_preds[final_preds['RatecodeID']==2].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "05ec4a45",
   "metadata": {
    "papermill": {
     "duration": 0.041317,
     "end_time": "2024-05-12T19:15:49.478209",
     "exception": false,
     "start_time": "2024-05-12T19:15:49.436892",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Check performance on full dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "d63fc41a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:49.566164Z",
     "iopub.status.busy": "2024-05-12T19:15:49.565785Z",
     "iopub.status.idle": "2024-05-12T19:15:49.581168Z",
     "shell.execute_reply": "2024-05-12T19:15:49.579897Z"
    },
    "papermill": {
     "duration": 0.062076,
     "end_time": "2024-05-12T19:15:49.583531",
     "exception": false,
     "start_time": "2024-05-12T19:15:49.521455",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R^2: 0.8910853978683975\n",
      "MAE: 1.992506252269974\n",
      "MSE: 12.101575504689935\n",
      "RMSE: 3.4787318816905013\n"
     ]
    }
   ],
   "source": [
    "final_preds = final_preds['y_preds_full']\n",
    "print('R^2:', r2_score(y, final_preds))\n",
    "print('MAE:', mean_absolute_error(y, final_preds))\n",
    "print('MSE:', mean_squared_error(y, final_preds))\n",
    "print('RMSE:',np.sqrt(mean_squared_error(y, final_preds)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e02c551",
   "metadata": {
    "papermill": {
     "duration": 0.041837,
     "end_time": "2024-05-12T19:15:49.667894",
     "exception": false,
     "start_time": "2024-05-12T19:15:49.626057",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Save final predictions with `mean_duration` and `mean_distance` columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "3c45102a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:49.754507Z",
     "iopub.status.busy": "2024-05-12T19:15:49.754082Z",
     "iopub.status.idle": "2024-05-12T19:15:49.768331Z",
     "shell.execute_reply": "2024-05-12T19:15:49.767220Z"
    },
    "papermill": {
     "duration": 0.060572,
     "end_time": "2024-05-12T19:15:49.770547",
     "exception": false,
     "start_time": "2024-05-12T19:15:49.709975",
     "status": "completed"
    },
    "scrolled": true,
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mean_duration</th>\n",
       "      <th>mean_distance</th>\n",
       "      <th>predicted_fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>22.847222</td>\n",
       "      <td>3.521667</td>\n",
       "      <td>16.434245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>24.470370</td>\n",
       "      <td>3.108889</td>\n",
       "      <td>16.052218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7.250000</td>\n",
       "      <td>0.881429</td>\n",
       "      <td>7.053706</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>30.250000</td>\n",
       "      <td>3.700000</td>\n",
       "      <td>18.731650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>14.616667</td>\n",
       "      <td>4.435000</td>\n",
       "      <td>15.845642</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   mean_duration  mean_distance  predicted_fare\n",
       "0      22.847222       3.521667       16.434245\n",
       "1      24.470370       3.108889       16.052218\n",
       "2       7.250000       0.881429        7.053706\n",
       "3      30.250000       3.700000       18.731650\n",
       "4      14.616667       4.435000       15.845642"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Combine means columns with predictions column\n",
    "nyc_preds_means = df[['mean_duration', 'mean_distance']].copy()\n",
    "nyc_preds_means['predicted_fare'] = final_preds\n",
    "\n",
    "nyc_preds_means.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a09ca82b",
   "metadata": {
    "papermill": {
     "duration": 0.042071,
     "end_time": "2024-05-12T19:15:49.854512",
     "exception": false,
     "start_time": "2024-05-12T19:15:49.812441",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Save as a csv file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "6d84b3a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-12T19:15:49.940643Z",
     "iopub.status.busy": "2024-05-12T19:15:49.940199Z",
     "iopub.status.idle": "2024-05-12T19:15:50.058038Z",
     "shell.execute_reply": "2024-05-12T19:15:50.056983Z"
    },
    "papermill": {
     "duration": 0.164394,
     "end_time": "2024-05-12T19:15:50.061036",
     "exception": false,
     "start_time": "2024-05-12T19:15:49.896642",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "nyc_preds_means.to_csv('nyc_preds_means.csv',index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd24046b",
   "metadata": {
    "papermill": {
     "duration": 0.041885,
     "end_time": "2024-05-12T19:15:50.146177",
     "exception": false,
     "start_time": "2024-05-12T19:15:50.104292",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# NOTES\n",
    "\n",
    "This notebook was designed for teaching purposes. As such, there are some things to note that differ from best practice or from how tasks are typically performed.\n",
    "\n",
    "1.  When the `mean_distance` and `mean_duration` columns were computed, the means were calculated from the entire dataset. These same columns were then used to train a model that was used to predict on a test set. A test set is supposed to represent entirely new data that the model has not seen before, but in this case, some of its predictor variables were derived using data that *was* in the test set.</br></br>\n",
    "This is known as **<u>data leakage</u>**. Data leakage is when information from your training data contaminates the test data. If your model has unexpectedly high scores, there is a good chance that there was some data leakage.\n",
    "</br></br>\n",
    "To avoid data leakage in this modeling process, it would be best to compute the means using only the training set and then copy those into the test set, thus preventing values from the test set from being included in the computation of the means. This would have created some problems because it's very likely that some combinations of pickup-dropoff locations would only appear in the test data (not the train data). This means that there would be NaNs in the test data, and further steps would be required to address this.\n",
    "</br></br>\n",
    "In this case, the data leakage improved the R<sup>2</sup> score by ~0.03.\n",
    "</br></br>\n",
    "2. Imputing the fare amount for `RatecodeID 2` after training the model and then calculating model performance metrics on the post-imputed data is not best practice. It would be better to separate the rides that did *not* have rate codes of 2, train the model on that data specifically, and then add the `RatecodeID 2` data (and its imputed rates) *after*. This would prevent training the model on data that you don't need a model for, and would likely result in a better final model. However, the steps were combined for simplicity.\n",
    "</br></br>\n",
    "3. Models that predict values to be used in another downstream model are common in data science workflows. When models are deployed, the data cleaning, imputations, splits, predictions, etc. are done using modeling pipelines. Pandas was used here to granularize and explain the concepts of certain steps, but this process would be streamlined by machine learning engineers. The ideas are the same, but the implementation would differ. Once a modeling workflow has been validated, the entire process can be automated, often with no need for pandas and no need to examine outputs at each step. This entire process would be reduced to a page of code."
   ]
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 4115721,
     "sourceId": 7163213,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 29.520942,
   "end_time": "2024-05-12T19:15:50.909357",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-05-12T19:15:21.388415",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
